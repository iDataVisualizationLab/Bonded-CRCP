{"version":3,"sources":["image/cover.jpg","component/tableData.js","component/Graph.js","image/Area.jpg","image/TotalDesign Traffic.png","image/StructureDesignCriteria.png","image/AcceptableNumberofPunchout.png","image/ConcreteLayer.png","image/soilSystermPic.png","image/subbase.png","image/BasetypePic.png","component/report.js","component/data/sTable.csv","component/data/kTable.csv","component/data/temperature.csv","component/County.js","component/CRCP.js","image/logo.png","App.js","reportWebVitals.js","index.js"],"names":["Tabledata","props","titles","state","visible","handleInput","prevProps","this","rows","minArray","maxArray","j","length","push","i","colorRedBlues","colorScale","d3","domain","range","r","parameter","DesignLife","color","colorgreenred","id","type","disabled","style","textAlign","fontSize","fontWeight","value","parseFloat","toFixed","size","onChange","event","setState","target","checked","for","width","display","border","backgroundColor","map","t","c","paddingRight","paddingTop","paddingBottom","indexOf","Component","Graph","colorGreenRed","tip","d3tip","attr","offset","html","d","y","x","init","parameterGraph","height","dataset","obj","xScale","yScale","xAxis","tickSizeInner","tickSizeOuter","tickPadding","yAxis","line","tableCreate","margin","top","right","bottom","left","refs","svg","select","selectAll","call","classes","Grid","container","alignItems","direction","spacing","item","xs","ref","className","transform","fontFamily","cx","cy","fill","strokeWidth","stroke","AnalysisPunchouts","withStyles","theme","root","Report","CRCP","BondBreaker","Base","Subbase","NaturalSoil","Paper","justify","toMenu","Button","variant","onClick","button","startIcon","toCRCP","window","print","Typography","header","subHeader","data","Region","Area","Highway","StationBegin","StationEnd","PunchoutsPerMile","LanesOneDirection","TrafficOneDirection","SlabThickness","SoilClassificationSystem","SoilSub","BaseThickness","ModulusBase","CompositeK","ModulusOfRupture","ElasticModulue","alignContent","underline","AnalysisSlabThickness","minHeight","layerHolder","flexGrow","BaseType","JCPC","padding","marginTop","marginRight","borderBottom","palette","secondary","light","paddingLeft","svgRef","React","createRef","zoom","k","geographies","Name","undefined","topojson","county","objects","features","current","scaleExtent","on","highlight","toLowerCase","highlighto","forEach","map_width","map_height","projection","geoMercator","center","translate","scale","viewBox","geoPath","properties","NAME","onMouseEnter","pointerEvents","onMouseOut","selected","toUpperCase","centroid","dy","regions","position","textAnchor","opacity","strokeOpacity","lineHeight","textShadow","textTransform","letterSpacing","shapeRendering","counties","Object","keys","key","highway","soilClassSub","styles","actionsContainer","marginBottom","resetContainer","dot","helpHolder","inputWithHelper","closeButton","grey","zIndex","DialogTitle","children","onClose","other","disableTypography","IconButton","aria-label","activeStep","stepsLength","finished","PlasticityIndex","SubbaseType","SubbaseThickness","BaseThicknessMin","BaseThicknessMax","currentAreas","currentRegions","SubbaseThicknessThreshHold","SubbaseTypeOpt","baseTypeOpt","ksTable","Map","ssTable","temperature","computeStress","input","Input","H1","K","B3","B4","B7","FD","PO","Math","round","pow","B5","B6","STR","B10","data2","mapSSTable","s","A2","B2","C2","D2","E2","F2","G2","I","H","Comp_K","H2","ID","ESALs","jump","jump2","data3","_H2","K2","K5","H5","L2","L5","data4","S2","S8","P2","P8","T2","T8","LN","log","lr","n","sum_x","sum_y","sum_xy","sum_xx","sum_yy","slope","sqrt","linearRegression","W19","X19","intercept","data5","Input_ESALs","_lookup","find","recompute","errorFunc","Step3","handleNext","handleBack","handleModify","handleReset","onSaveInput","filename","Date","toISOString","replace","saveData","jsonse","JSON","stringify","blob","Blob","url","URL","createObjectURL","downloadLink","document","createElement","body","appendChild","navigator","msSaveOrOpenBlob","href","download","click","removeChild","handleOpenHelper","content","freeze","helperEl","el","currentTarget","handleCloseHelper","source","handleBlurSliderInput","min","max","handleChangeSliderInput","Number","handleChange","handleSoilSub","handleBaseType","handlePlasticityIndex","calculateCompositeK","get","getSubgradeValue","getModulusBase","prevState","snapshot","kTable","then","_data","set","sTable","slabthickness","rowIndexStress","row1","fatigue","row2","getGroupControl","Container","maxWidth","elevation","Stepper","orientation","Step","StepLabel","StepContent","displayPrint","noValidate","autoComplete","sm","md","Autocomplete","options","reason","renderInput","params","TextField","dense","required","error","label","src","RegionPic","onMouseLeave","AreaPic","freeSolo","DirectionOfConstruction","InputLabelProps","shrink","multiline","defaultValue","lg","Slider","newValue","Hidden","smDown","onBlur","inputProps","xm","TrafficOneDirectionPic","StructureDesignCriteriaPic","AcceptableNumberofPunchoutPic","ConcreteLayerPic","soilSystermPic","text","helperText","square","openAnalytics","Popper","placement","disablePortal","open","anchorEl","modifiers","flip","enabled","preventOverflow","boundariesElement","arrow","Card","defaultScale","defaultPositionX","defaultPositionY","Dialog","fullWidth","DialogContent","useStyles","makeStyles","menuButton","titleNav","title","cover","background","coverPic","backgroundSize","overflow","logo","App","useState","page","setPage","setAnalysisPunchouts","setAnalysisSlabThickness","AppBar","Toolbar","grow","Slide","in","mountOnEnter","unmountOnExit","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e81489f7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/cover.2ed71e68.jpg\";","import React,{ Component } from 'react';\r\nimport * as d3 from 'd3';\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\n\r\nclass Tabledata  extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            visible:false\r\n        }\r\n        this.handleInput();\r\n        // var r = 12 * this.props.parameter.DesignLife - 1;\r\n        // this.props.AnalysisPunchouts(this.props.rows[r][12]);\r\n    }\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.rows!==prevProps.rows){\r\n            this.handleInput();\r\n            // var r = 12 * this.props.parameter.DesignLife - 1;\r\n            // this.props.AnalysisPunchouts(this.props.rows[r][12]);\r\n        }\r\n    }\r\n\r\n    handleInput() {\r\n        const rows = this.props.rows;\r\n        var minArray = [];\r\n        var maxArray = [];\r\n        for (var j = 0; j < rows[0].length; j++) {\r\n            minArray.push(1000000000);\r\n            maxArray.push(0);\r\n        }\r\n        for (var i = 0; i < rows.length; i++) {\r\n            for (var j = 0; j < rows[i].length; j++) {\r\n                if (rows[i][j] > maxArray[j])\r\n                    maxArray[j] = rows[i][j];\r\n                if (rows[i][j] < minArray[j])\r\n                    minArray[j] = rows[i][j];\r\n            }\r\n        }\r\n        this.colorRedBlues = [];\r\n        for (var j = 0; j < rows[0].length; j++) {\r\n            var colorScale = d3.scaleLinear()\r\n                .domain([minArray[j], (minArray[j] + maxArray[j]) / 2, maxArray[j]])\r\n                .range([\"#55f\", \"white\", \"#f55\"]);\r\n            this.colorRedBlues.push(colorScale);\r\n        }\r\n    }\r\n\r\n    titles = [\"Age (Month)\",\"Age (Year)\", \"Modulus of Rupture (psi)\",\"Modulus of Elasticity (ksi)\"\r\n        ,\"Concrete Stress (T) (psi)\"\r\n        ,\"Concrete Stress (E) (psi)\"\r\n        ,\"Total Concrete Stress (psi)\"\r\n        ,\"Stress to Strength Ratio (psi/psi)\"\r\n        ,\"Number of Load Repetitions to Failure\"\r\n        ,\"Number of Load Repetitions\"\r\n        ,\"Pavement Damage\"\r\n        ,\"Cumulative Damage\"\r\n        ,\"Number of Punchouts per Mile\"]\r\n    render() {\r\n        debugger\r\n        var r = 12 * this.props.parameter.DesignLife - 1;\r\n        if (this.colorRedBlues&&this.props.rows[r]) {\r\n            var color = this.props.colorgreenred(this.props.rows[r][12]);\r\n            return (<div>\r\n                <div id=\"div_CRCP_PERFORMANCE\"><b>CRCP PERFORMANCE</b><br/>\r\n                    Number of Punchouts per Mile:<input type=\"TEXT\" disabled style={{\r\n                        \"background-color\": color,\r\n                        textAlign: \"center\",\r\n                        fontSize: 17,\r\n                        fontWeight: \"bold\"\r\n                    }} value={parseFloat(this.props.rows[r][12]).toFixed(2)} size=\"7\"/><br/><br/>\r\n                </div>\r\n                <div id=\"divCheckbox1\"><input type=\"checkbox\" id=\"checkbox1\"\r\n                                              onChange={(event) => this.setState({visible: event.target.checked})}/>\r\n                    <label for=\"checkbox1\"> Analysis Result </label></div>\r\n                <table style={{width: '99%', fontSize: '12px', display: this.state.visible ? 'table' : 'none'}}\r\n                       border=\"1\" id=\"analysisTable\">\r\n                    <tr style={{backgroundColor: \"#888\"}}>\r\n                        {this.titles.map(t => <td>{t}</td>)}\r\n                    </tr>\r\n                    {this.props.rows.map(r => <tr>{r.map((c, j) => <td style={{\r\n                        textAlign: 'right',\r\n                        backgroundColor: (j === 12) ? this.props.colorgreenred(c) : this.colorRedBlues[j](c),\r\n                        paddingRight: '10px',\r\n                        paddingTop: '0px',\r\n                        paddingBottom: '0px'\r\n                    }}>\r\n                        {([1, 2, 3, 12, 8, 9, 5, 6, 7, 10, 11].indexOf(j) !== -1) ? parseFloat(c).toFixed((j == 1 || j == 12) ? 2 : ((j == 2 || j == 3 || j == 8 || j == 9) ? 0 : ((j == 5 || j == 6) ? 1 : ((j == 7) ? 3 : 4)))) : c}\r\n                    </td>)}</tr>)}\r\n                </table>\r\n            </div>)\r\n        }else\r\n            return ''\r\n    }\r\n}\r\n\r\nexport default Tabledata;\r\n","import React, {Component} from 'react';\r\nimport './Graph.css';\r\nimport Tabledata from './tableData';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport {\r\n    Grid,\r\n    Typography,\r\n    Button,\r\n    Paper,\r\n    Stepper,\r\n    Step,\r\n    StepLabel,\r\n    StepContent,\r\n    TextField,\r\n    Container\r\n} from '@material-ui/core';\r\nimport * as d3 from 'd3';\r\nimport {tip as d3tip} from \"d3-v6-tip\";\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: '100%',\r\n        '& .MuiTextField-root': {\r\n            width: '100%',\r\n        },\r\n        '& input': {\r\n            width: '100%',\r\n        },\r\n    }\r\n});\r\n\r\nclass Graph extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const margin = {top: 20, right: 80, bottom: 60, left: 120},\r\n            width = 900 - margin.left - margin.right,\r\n            height = 400 - margin.top - margin.bottom;\r\n\r\n        this.state = {\r\n            margin,\r\n            width,\r\n            height,\r\n            // row1:[],\r\n            // rows:[],\r\n            init: true\r\n        }\r\n    }\r\n\r\n    colorGreenRed = d3.scaleLinear()\r\n        .domain([0, 25])\r\n        .range([\"#0f0\", \"#f00\"]);\r\n    tip = d3tip()\r\n        .attr('class', 'd3-tip')\r\n        .offset([-10, 0])\r\n        .html((d) => {\r\n            var color = this.colorGreenRed(d.y);\r\n            var html = \"#Punchouts per Mile: <span style='color:\" + color + \"; font-weight: bold'>\" + parseFloat(d.y).toFixed(2) + \"</span><br>\";\r\n            html += \"&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; Age (months):  <span style='color:white; font-weight: bold'>\" + d.x + \"</span>\";\r\n            return html;\r\n        });\r\n\r\n    componentDidMount() {\r\n        this.tableCreate();\r\n        this.parameterGraph();\r\n    }\r\n\r\n    init = true;\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const init = ((this.props.init !== prevProps.init) && this.props.init);\r\n        // console.log('-------------------------',init)\r\n        this.init = init || this.init;\r\n        // console.log('-------------------------this',this.init)\r\n        if ((this.props.parameter !== prevProps.parameter) || this.init) {\r\n            this.parameterGraph();\r\n            if (this.refs.svg && this.state.xAxis && this.state.yAxis) {\r\n                const svg = d3.select(this.refs.svg).select('g.content');\r\n                svg.selectAll(\".xaxis\")\r\n                    .attr(\"transform\", \"translate(0,\" + this.state.height + \")\")\r\n                    .call(this.state.xAxis);\r\n                svg.selectAll(\".yaxis\")\r\n                    .call(this.state.yAxis);\r\n                if (this.init && this.state.dataset.length) {\r\n                    //     debugger\r\n                    //     svg.selectAll(\".point\")\r\n                    //         .data(this.state.dataset).enter()\r\n                    //         .append(\"circle\")\r\n                    //         .attr(\"class\", \"point\")\r\n                    //         .attr(\"r\", 4)\r\n                    //         .attr(\"cx\", (d)=>this.state.xScale(d.x))\r\n                    //         .attr(\"cy\", (d)=> this.state.yScale(d.y))\r\n                    //         .attr(\"fill\", (d)=> this.colorGreenRed(d.y))\r\n                    //         .attr(\"stroke-width\", 0.5)\r\n                    //         .attr(\"stroke\",\"#000\")\r\n                    //         .on('mouseover', this.tip.show)\r\n                    //         .on('mouseout', this.tip.hide)\r\n                    //     svg.call(this.tip)\r\n                    this.init = false;\r\n                }\r\n                // }else{\r\n                //     svg.selectAll(\".point\")\r\n                //         .data(this.state.dataset)\r\n                //         .attr(\"cx\", (d)=> this.state.xScale(d.x))\r\n                //         .attr(\"cy\", (d,i)=>this.state.yScale(d.y))\r\n                //         .attr(\"fill\", (d)=> this.colorGreenRed(d.y));\r\n                // }\r\n            }\r\n        }\r\n    }\r\n\r\n    parameterGraph = () => {\r\n        const width = this.state.width;\r\n        const height = this.state.height;\r\n        const rows = this.props.rows;\r\n        var dataset = [];\r\n        for (var i = 0; i < rows.length; i++) {\r\n            var obj = {};\r\n            obj.x = rows[i][0];\r\n            obj.y = rows[i][12];\r\n            dataset.push(obj);\r\n        }\r\n        var xScale = d3.scaleLinear()\r\n            .domain([0, d3.max(dataset, function (d) {\r\n                return d.x;\r\n            })])\r\n            .range([0, width]);\r\n        var yScale = d3.scaleLinear()\r\n            .domain([0, d3.max(dataset, function (d) {\r\n                return d.y;\r\n            })])\r\n            .range([height, 0]);\r\n        var xAxis = d3.axisBottom(xScale)\r\n            .tickSizeInner(-height)\r\n            .tickSizeOuter(0)\r\n            .tickPadding(10);\r\n\r\n        var yAxis = d3.axisLeft(yScale)\r\n            .tickSizeInner(-width)\r\n            .tickSizeOuter(0)\r\n            .tickPadding(10);\r\n\r\n        var line = d3.line()\r\n            .x(function (d) {\r\n                return xScale(d.x);\r\n            })\r\n            .y(function (d) {\r\n                return yScale(d.y);\r\n            });\r\n\r\n        this.setState({xScale, yScale, xAxis, yAxis, line, dataset});\r\n    }\r\n\r\n    tableCreate = () => {\r\n\r\n    }\r\n\r\n    render() {\r\n        const {classes} = this.props;\r\n        return ((this.props.rows.length && this.state.dataset) ?\r\n            <Grid container alignItems=\"center\" direction={\"column\"} spacing={1}>\r\n                <Grid item xs={11}>\r\n                    <svg ref=\"svg\"\r\n                         width={this.state.width + this.state.margin.left + this.state.margin.right}\r\n                         height={this.state.height + this.state.margin.top + this.state.margin.bottom}>\r\n                        <g className=\"content\"\r\n                           transform={\"translate(\" + this.state.margin.left + \",\" + this.state.margin.top + \")\"}>\r\n                            <text className=\"xAxisText\"\r\n                                  style={{\"textAnchor\": \"middle\", \"textShadow\": \"1px 1px 0 rgba(200, 200, 200, 0.7\"}}\r\n                                  fontFamily=\"sans-serif\" fontSize=\"16px\" x={this.state.width / 2}\r\n                                  y={this.state.height + 40}>Age (months)\r\n                            </text>\r\n                            <text className=\"YAxisText\"\r\n                                  transform={\"translate(\" + (-50) + \",\" + this.state.height / 2 + \")\" + \" rotate(-90)\"}\r\n                                  style={{\"textAnchor\": \"middle\", \"textShadow\": \"1px 1px 0 rgba(200, 200, 200, 0.7\"}}\r\n                                  fontFamily=\"sans-serif\" fontSize=\"16px\">Number of Punchouts per Mile\r\n                            </text>\r\n                            <g className=\"xaxis\" transform={\"translate(0,\" + this.state.height + \")\"}></g>\r\n                            <g className=\"yaxis\"></g>\r\n                            <path className=\"line\" d={this.state.line(this.state.dataset)}/>\r\n                            {this.state.dataset.map(d => <circle className=\"point\" r={4} cx={this.state.xScale(d.x)}\r\n                                                                 cy={this.state.yScale(d.y)}\r\n                                                                 fill={this.colorGreenRed(d.y)}\r\n                                                                 strokeWidth={0.5} stroke={\"#000\"}></circle>)}\r\n                        </g>\r\n                    </svg>\r\n                </Grid><Grid item xs={11}><Tabledata AnalysisPunchouts={this.props.AnalysisPunchouts}\r\n                                                     parameter={this.props.parameter} colorgreenred={this.colorGreenRed}\r\n                                                     rows={this.props.rows}/></Grid></Grid> : '');\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Graph);\r\n","export default __webpack_public_path__ + \"static/media/Area.de58021b.jpg\";","export default __webpack_public_path__ + \"static/media/TotalDesign Traffic.948031ff.png\";","export default __webpack_public_path__ + \"static/media/StructureDesignCriteria.4f123ed0.png\";","export default __webpack_public_path__ + \"static/media/AcceptableNumberofPunchout.f191431d.png\";","export default __webpack_public_path__ + \"static/media/ConcreteLayer.45d36da4.png\";","export default __webpack_public_path__ + \"static/media/soilSystermPic.c6e7e75d.png\";","export default __webpack_public_path__ + \"static/media/subbase.a3bc3c69.png\";","export default __webpack_public_path__ + \"static/media/BasetypePic.61fd6d33.png\";","import React, {Component} from \"react\";\r\nimport {Button} from \"@material-ui/core\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport PrintIcon from \"@material-ui/icons/Print\";\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: '100%',\r\n        padding: theme.spacing(2)\r\n    },\r\n    button: {\r\n        marginTop: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    underline: {\r\n        borderBottom: '1px solid black'\r\n    },\r\n    subHeader: {\r\n        paddingTop: theme.spacing(2)\r\n    },\r\n    header:{\r\n        backgroundColor: theme.palette.secondary.light\r\n    },\r\n    layerHolder:{\r\n        '& div:first-child':{\r\n            paddingLeft: 10\r\n        }\r\n    }\r\n});\r\n\r\nclass Report extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            CRCP: 13,\r\n            BondBreaker: 1,\r\n            Base: 6,\r\n            Subbase: 12,\r\n            NaturalSoil: 6,\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {classes} = this.props;\r\n        return <Paper>\r\n            <Grid container alignItems={\"start\"} justify={\"center\"}>\r\n                {this.props.toMenu ? <Grid item xs={12}>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        size=\"small\"\r\n                        onClick={this.props.toMenu}\r\n                        className={classes.button}\r\n                        startIcon={<HomeIcon/>}\r\n                    >\r\n                        To Main Menu\r\n                    </Button>\r\n                    <Button\r\n                        onClick={this.props.toCRCP}\r\n                        className={classes.button}\r\n                    >\r\n                        Back\r\n                    </Button>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        size=\"small\"\r\n                        className={classes.button}\r\n                        startIcon={<PrintIcon/>}\r\n                        onClick={() => window.print()}\r\n                    >\r\n                        Print\r\n                    </Button>\r\n                </Grid> : ''}\r\n                <Grid container item xs={11} justify={\"start\"} spacing={1} className={[\"section-to-print\", classes.root]}>\r\n\r\n                    <Grid item xs={6} container justify=\"flex-start\"\r\n                          alignItems=\"flex-start\"\r\n                    >\r\n                        <Grid item xs={12}>\r\n                            <Typography variant={'h5'} className={classes.header}>INPUT DATA</Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant={'h6'} className={classes.subHeader}>A. Project\r\n                                Identification</Typography>\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            Region\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            {this.props.data.Region}\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            Area\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            {this.props.data.Area}\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            Highway\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            {this.props.data.Highway}\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            Station (Begin)\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            {this.props.data.StationBegin}\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            Station (End)\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            {this.props.data.StationEnd}\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12}>\r\n                            <Typography variant={'h6'} className={classes.subHeader}> B. Design Parameters &\r\n                                Traffic</Typography>\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            Design Life (year)\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            {this.props.data.DesignLife}\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            Number of Punchouts per km\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            {this.props.data.PunchoutsPerMile}\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            Total Number of Lanes in One Direction\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            {this.props.data.LanesOneDirection}\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            Total Design Traffic in One Direction (million ESALs)\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            {this.props.data.TrafficOneDirection}\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            Existing Slab Thickness (cm)\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            {this.props.data.SlabThickness}\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant={'h6'} className={classes.subHeader}> C. Subgrade Information</Typography>\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            Soil Classification System\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            {this.props.data.SoilClassificationSystem}\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            Soil Classification of Subgrade\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            {this.props.data.SoilSub}\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12}>\r\n                            <Typography variant={'h6'} className={classes.subHeader}>D. Base Layer\r\n                                Information</Typography>\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            Base Thickness (cm)\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            {this.props.data.BaseThickness}\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            Modulus of Base Layer (MPa)\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            {this.props.data.ModulusBase}\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            Composite K (psi/in.)\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            {this.props.data.CompositeK}\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12}>\r\n                            <Typography variant={'h6'} className={classes.subHeader}> E. Concrete Material\r\n                                Properties</Typography>\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            28-Day Modulus of Rupture (psi)\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            {this.props.data.ModulusOfRupture}\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            Elastic Modulus (million psi)\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                            {this.props.data.ElasticModulue}\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={6} container justify=\"flex-start\"\r\n                          direction=\"row\"\r\n                          alignContent=\"flex-start\"\r\n                    >\r\n                        <Grid item xs={12}>\r\n                            <Typography variant={'h5'} className={classes.header}>OVERLAY DESIGN</Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant={'h6'} className={classes.subHeader}> F. Design Slab Thickness & Performance</Typography>\r\n                        </Grid>\r\n                        <Grid item xs={8} className={classes.underline}>\r\n                            Design Slab Thickness (cm)\r\n                        </Grid>\r\n                        <Grid item xs={4} className={classes.underline} style={{color:(this.props.AnalysisSlabThickness>13)?'red':null}}>\r\n                            {this.props.AnalysisSlabThickness}\r\n                        </Grid>\r\n                        <Grid item xs={8} className={classes.underline}>\r\n                            Number of Punchouts per Km\r\n                        </Grid>\r\n                        <Grid item xs={4} className={classes.underline} style={{color:(this.props.AnalysisPunchouts>this.props.data.PunchoutsPerMile)?'red':null}}>\r\n                            {this.props.AnalysisPunchouts ? this.props.AnalysisPunchouts.toFixed(2) : ''}\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Typography variant={'h6'} className={classes.subHeader}> G. Layer Information</Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12} container justify=\"center\" direction=\"column\" style={{minHeight: 500}}>\r\n                            <Grid className={classes.layerHolder} container alignContent={\"center\"}\r\n                                  style={{flexGrow: this.state.CRCP, backgroundColor: '#F2F2F2'}}>\r\n                                <Grid xs item>CRCP</Grid>\r\n                                <Grid xs item>Thickness</Grid>\r\n                                {/*<Grid xs item>{this.state.CRCP}''</Grid>*/}\r\n                                <Grid xs item>{this.props.AnalysisSlabThickness}''</Grid>\r\n                            </Grid>\r\n                           {this.props.data.BaseType==='CTB'?<Grid className={classes.layerHolder} container alignContent={\"center\"}\r\n                                  style={{flexGrow: this.state.BondBreaker, backgroundColor: '#404040', color:'white'}}>\r\n                                <Grid xs item>Bond Breaker</Grid>\r\n                                <Grid xs item>Thickness</Grid>\r\n                                <Grid xs item>≥{this.state.BondBreaker}''</Grid>\r\n                            </Grid>:''}\r\n                            <Grid container alignContent={\"center\"}\r\n                                  style={{flexGrow: this.props.data.JCPC, backgroundColor: '#D9D9D9'}}>\r\n                                <Grid className={classes.layerHolder} container>\r\n                                    <Grid xs item>JCPC</Grid>\r\n                                    <Grid xs item>Thickness</Grid>\r\n                                    <Grid xs item>{this.props.data.JCPC}''</Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid container alignContent={\"center\"}\r\n                                  style={{flexGrow: this.props.data.BaseThickness, backgroundColor: '#F2F2F2'}}>\r\n                                <Grid className={classes.layerHolder} container>\r\n                                    <Grid xs item>Base</Grid>\r\n                                    <Grid xs item>Thickness</Grid>\r\n                                    <Grid xs item>{this.props.data.BaseThickness}''</Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid container alignContent={\"center\"}\r\n                                  style={{flexGrow: this.state.NaturalSoil, backgroundColor: '#FFC000'}}>\r\n                                <Grid className={classes.layerHolder} container>\r\n                                    <Grid xs item>Natural Soil</Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                </Grid>\r\n            </Grid>\r\n        </Paper>\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Report)\r\n","export default __webpack_public_path__ + \"static/media/sTable.c9e2b8ad.csv\";","export default __webpack_public_path__ + \"static/media/kTable.aef01e9d.csv\";","export default __webpack_public_path__ + \"static/media/temperature.03b6eba9.csv\";","import React, {Component} from \"react\";\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\nimport { geoMercator, geoPath } from \"d3-geo\";\r\nimport * as topojson from \"topojson-client\";\r\nimport * as d3 from \"d3\";\r\nimport county from \"./data/south-korea\"\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: '100%',\r\n        position:'relative',\r\n        '& .label text': {\r\n          fontSize:4,\r\n            textAnchor: 'middle'\r\n        },\r\n        '& .tooltip': {\r\n          position: 'absolute',\r\n          display:'none',\r\n            pointerEvents:'none',\r\n            transform:'translate(3px,3px)'\r\n        },\r\n        '& .bold': {\r\n            fontWeight: 'bold',\r\n        },\r\n\r\n        '& .raster': {\r\n            fill: 'none',\r\n            opacity: 1\r\n        },\r\n\r\n        '& .neutral-county': {\r\n            fill: '#FFF',\r\n            opacity: 0.4\r\n        },\r\n        '& .highlighted-county': {\r\n            fill: '#C00',\r\n            opacity: 0.6\r\n        },\r\n\r\n        '& .neutral-county, .highlighted-county': {\r\n            stroke: '#6E6E6E',\r\n            strokeOpacity: 0.6,\r\n            strokeWidth: '0.7px'\r\n        },\r\n        '& .counties': {\r\n            fill: 'none',\r\n            stroke: '#6E6E6E',\r\n            strokeOpacity: 0.4,\r\n            strokeWidth: '0.5px'\r\n        },\r\n        '& .state-border': {\r\n            fill: 'none',\r\n            stroke: '#6E6E6E',\r\n            strokeOpacity: 0.7,\r\n            strokeWidth: '1px'\r\n        },\r\n        '& .city-marker': {\r\n            fill: 'none',\r\n            opacity: 0.6,\r\n            strokeWidth: '2px',\r\n            stroke: '#000'\r\n        },\r\n        '& .capital-marker': {\r\n            fill: 'goldenrod',\r\n            opacity: 1,\r\n            strokeWidth: '3px',\r\n            stroke: '#000',\r\n            strokeOpacity: 0.6\r\n        },\r\n\r\n        '& .text-note': {\r\n            fontSize: '15px',\r\n            fontWeight: 500,\r\n            color: '#000',\r\n            opacity: 0.6,\r\n            lineHeight: '18px',\r\n            margin: 0,\r\n            textShadow: '1px  1px 0 white, 1px -1px 0 white, -1px  1px 0 white, -1px -1px 0 white'\r\n        },\r\n\r\n        '& .city-label': {\r\n            textAnchor: 'middle',\r\n            margin: 0,\r\n            fontSize: '15px',\r\n            lineHeight: '14px',\r\n            fontWeight: 500,\r\n            textAlign: 'right',\r\n            opacity: 0.6,\r\n            color: '#000',\r\n            textShadow: '1px  1px 0 white, 1px -1px 0 white, -1px  1px 0 white, -1px -1px 0 white'\r\n        },\r\n\r\n        '& .legend': {\r\n            fontSize: '15px',\r\n            lineHeight: '24px',\r\n            fontWeight: 500,\r\n            color: '#333'\r\n        },\r\n\r\n        '& .label-line': {\r\n            stroke: '#000',\r\n            strokeWidth: '1.5px',\r\n            strokeOpacity: 1,\r\n            opacity: 0.8,\r\n            fill: 'none'\r\n        },\r\n\r\n        '& .state-label': {\r\n            fontWeight: 500,\r\n            textTransform: 'uppercase',\r\n            textAnchor: 'middle',\r\n            opacity: 0.3,\r\n            color: '#000',\r\n            fontSize: '24px',\r\n            lineHeight: '28px',\r\n            letterSpacing: '0.6em'\r\n        },\r\n\r\n        '& .distance-scale': {\r\n            fontSize: '11px',\r\n            lineHeight: '11px',\r\n            position: 'absolute',\r\n            fontWeight: 500,\r\n            textTransform: 'uppercase',\r\n            color: '#000'\r\n        },\r\n\r\n        '& .distance-scale-line': {\r\n            stroke: '#000',\r\n            strokeWidth: 1,\r\n            strokeOpacity: 1,\r\n            opacity: 1,\r\n            fill: '#000',\r\n            shapeRendering: 'crispEdges'\r\n        }\r\n\r\n    }\r\n});\r\n\r\nclass Area extends Component {\r\n    svgRef = React.createRef();\r\n    zoom = {k:1,x:0,y:0};\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            geographies: [],\r\n            Name:undefined\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n            this.setState({geographies: topojson.feature(county, county.objects['skorea_provinces_2018_geo']).features});\r\n            if (this.svgRef){\r\n                let svg = d3.select(this.svgRef.current);\r\n                    // .select('g.content')\r\n                svg.call(d3.zoom().scaleExtent([1, 10]).on('zoom',(event)=>{\r\n                    svg.select('g.content').attr('transform', event.transform);\r\n                    this.zoom = event.transform\r\n                    }))\r\n            }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if(prevProps.highlight!==this.props.highlight){\r\n            this.setState({highlight:this.props.highlight})\r\n        }\r\n        if(prevProps.target!==this.props.target){\r\n            this.setState({target:(this.props.target??'').toLowerCase()})\r\n        }\r\n    }\r\n    render(){\r\n        const {classes,highlight} = this.props;\r\n        const {target} = this.state;\r\n       const highlighto = {};\r\n       highlight.forEach(d=>highlighto[d.toLowerCase()]=1);\r\n        const {geographies} = this.state;\r\n        const map_width=800;\r\n        const map_height=450;\r\n\r\n        const projection = geoMercator()\r\n            .center([ -99.43,31.47 ])\r\n            .translate([ map_width/2, map_height/2 ])\r\n            .scale([ 2000 ]);\r\n        return <div className={classes.root}>\r\n            <svg width={ map_width } height={ map_height } viewBox={`0 0 ${map_width} ${map_height}`} ref={this.svgRef}>\r\n                <g className=\"content\">\r\n                    <g className=\"countries\">\r\n                        {\r\n                            geographies.map((d,i) => (\r\n                                <path\r\n                                    key={ `path-${ i }` }\r\n                                    d={ geoPath().projection(projection)(d) }\r\n                                    className=\"country\"\r\n                                    // fill={ `rgba(38,50,56,${ 1 / geographies.length * i})` }\r\n                                    fill={(d.properties.NAME.toLowerCase()===target) ?'#17dd75':(highlighto[d.properties.NAME.toLowerCase()]?(this.state.Name===d.properties.NAME?'#3adddd':'steelBlue'):`rgba(38,50,56,1)` )}\r\n                                    stroke=\"#FFFFFF\"\r\n                                    strokeWidth={ 0.5 }\r\n                                    onMouseEnter={(event)=>{this.setState({Name:d.properties.NAME,x:(d3.pointer(event)[0]-this.zoom.x)/this.zoom.k,y:(d3.pointer(event)[1]/this.zoom.y)/this.zoom.k});}}\r\n                                    style={{pointerEvents:highlighto[d.properties.NAME.toLowerCase()]?'all':'none'}}\r\n                                    onMouseOut={()=>{this.setState({Name:undefined})}}\r\n                                    onClick={()=>{this.props.selected(d.properties.NAME.toUpperCase())}}\r\n                                />\r\n                            ))\r\n                        }\r\n                    </g>\r\n                    <g className=\"label\">\r\n                        {\r\n                            geographies.map((d, i) => (\r\n                                <text\r\n                                    key={`path-${i}`}\r\n                                    // fill={ `rgba(38,50,56,${ 1 / geographies.length * i})` }\r\n                                    x={geoPath().projection(projection).centroid(d)[0]}\r\n                                    y={geoPath().projection(projection).centroid(d)[1]}\r\n                                    fill={(d.properties.NAME.toLowerCase() === target) ? 'black' : (highlighto[d.properties.NAME.toLowerCase()] ? (this.state.Name === d.properties.NAME ? 'black' : 'black') : `gray`)}\r\n                                    style={{pointerEvents: 'none'}}\r\n                                >\r\n                                    {d.properties.NAME.toUpperCase()}\r\n                                </text>\r\n                            ))\r\n                        }\r\n                    </g>\r\n                </g>\r\n                <g id={'legend'} transform={`translate(${map_width-200},${map_height-80})`}>\r\n                    <g transform={`translate(${10},${-17})`}>\r\n                        <text x={-40} y={0} dy={10} fill={'#8a8a8a'}>Click on map to select County</text>\r\n                    </g>\r\n                    <g transform={`translate(${10},${13})`}>\r\n                        <rect width={10} height={10} fill={'rgba(38,50,56,1)'}/>\r\n                        <text x={15} y={0} dy={10}> Not selectable</text>\r\n                    </g>\r\n                    <g transform={`translate(${10},${33})`}>\r\n                        <rect width={10} height={10} fill={'steelBlue'}/>\r\n                        <text x={15} y={0} dy={10}> Selectable</text>\r\n                    </g>\r\n                    {/*<g transform={`translate(${10},${53})`}>*/}\r\n                    {/*    <rect width={10} height={10} fill={'#3adddd'}/>*/}\r\n                    {/*    <text x={15} y={0} dy={10}> Highlighted</text>*/}\r\n                    {/*</g>*/}\r\n                    <g transform={`translate(${10},${53})`}>\r\n                        <rect width={10} height={10} fill={'#17dd75'}/>\r\n                        <text x={15} y={0} dy={10}> Selected</text>\r\n                    </g>\r\n                </g>\r\n            </svg>\r\n            {/*<Card className=\"tooltip\" style={{display:this.state.Name?'block':'none',left:this.state.x,top:this.state.y}}>*/}\r\n            <div className=\"tooltip bold\" style={{display:this.state.Name?'block':'none',left:10,top:10, fontSize:20, padding:5,backgroundColor:'rgba(255,255,255,0.49)'}}>\r\n                {this.state.Name}\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Area);\r\n","import React, {Component} from 'react';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport {\r\n    Slider,\r\n    Typography,\r\n    Button,\r\n    Paper,\r\n    Grid,\r\n    Stepper,\r\n    Step,\r\n    StepLabel,\r\n    StepContent,\r\n    TextField,\r\n    Container,\r\n    Input,\r\n    Hidden\r\n} from '@material-ui/core';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport Graph from './Graph'\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport PrintIcon from '@material-ui/icons/Print';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport PublishIcon from '@material-ui/icons/Publish';\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Popper from \"@material-ui/core/Popper\";\r\nimport Image from 'material-ui-image';\r\nimport AreaPic from '../././image/Area.jpg';\r\nimport RegionPic from '../././image/Area.jpg';\r\nimport TrafficOneDirectionPic from '../././image/TotalDesign Traffic.png';\r\nimport StructureDesignCriteriaPic from '../././image/StructureDesignCriteria.png';\r\nimport AcceptableNumberofPunchoutPic from '../././image/AcceptableNumberofPunchout.png';\r\nimport ConcreteLayerPic from '../././image/ConcreteLayer.png';\r\nimport soilSystermPic from '../././image/soilSystermPic.png';\r\nimport subbasePic from '../././image/subbase.png';\r\nimport BasetypePic from '../././image/BasetypePic.png';\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Report from \"./report\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport * as d3 from \"d3\";\r\nimport { TransformWrapper, TransformComponent } from \"react-zoom-pan-pinch\";\r\nimport sTable from \"./data/sTable.csv\";\r\n// import stress from \"./data/stress.csv\";\r\nimport kTable from \"./data/kTable.csv\";\r\nimport temperature from \"./data/temperature.csv\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport Divider from \"@material-ui/core/Divider/Divider\";\r\nimport Region from \"./County\";\r\n\r\nconst regions = {\r\n    \"1\": ['고산', '성산', '서귀포', '제주', '흑산도', '진도군', '완도', '여수', '울릉도', '통영', '보성군', '거제', '목포', '고흥', '광양시', '북창원', '남해', '장흥'],\r\n    \"2\": ['부산', '강진군', '양산시', '백령도', '김해시', '광주', '동해', '순천', '보령', '해남', '창원', '울진', '군산', '포항', '울산', '산청', '영광군', '경주시', '대구', '의령군', '구미', '북강릉', '고창군', '진주', '정읍', '고창', '홍성', '함양군', '강릉', '추풍령', '전주', '상주', '순창군', '해주', '밀양', '영덕', '용연', '속초', '인천', '부안', '장전', '영천', '문경', '거창', '서산', '합천', '김책', '남포', '청진', '대전', '원산', '사리원', '청주', '남원', '개성', '태백', '평양', '수원', '강화', '선봉', '청송군', '서울', '안주', '신의주', '부여', '영주', '함흥', '신포', '안동', '임실', '정선군', '장수', '원주', '신계'],\r\n    \"3\": ['보은', '금산', '천안', '충주', '대관령', '양평', '파주', '북춘천', '인제', '수풍', '이천', '영월', '희천', '의성', '평강', '춘천', '구성', '동두천', '제천', '봉화', '풍산', '양덕', '철원', '홍천', '강계', '장진', '삼지연', '중강', '혜산'],\r\n};\r\n\r\nconst counties = {};\r\nObject.keys(regions).forEach(key => {\r\n    regions[key].forEach(c => counties[c] ? counties[c].push(key) : counties[c] = [key])\r\n});\r\nconst highway = [\"IH 45\", \"US 290\", \"IH 30\", \"US 59\", \"IH 35W\", \"IH 820\", \"IH 10\", \"IH 40\", \"IH 35\", \"US 287\", \"US 81\", \"IH 27\", \"SL 289\", \"SH 226\", \"SH 36\", \"US 83B\", \"VA\", \"FM 3129\", \"IH 20\", \"US 71\", \"US 79\", \"US 47\", \"US 67\", \"BU90-Y\", \"CS\", \"FM 1960\", \"FM 364\", \"FM 365\", \"SH 347\", \"SH 105\", \"SH 12\", \"SH 124\", \"SH 146\", \"SH 326\", \"SH 61\", \"SH 73\", \"SH 87\", \"SS 380\", \"US 90\", \"US 69\", \"US 96\", \"BS6-R\", \"SH 21\", \"BW 8\", \"US 83\", \"BS 121H\", \"FM 1171\", \"FM 1382\", \"FM 2499\", \"FM 709\", \"FM 740\", \"IH 35E\", \"IH4 5\", \"IH 635\", \"LP 12\", \"LP 354\", \"MH\", \"SH 289\", \"SH 31\", \"SH 66\", \"SH 78\", \"SH 114\", \"SH 121\", \"SH 161\", \"SH 180\", \"SH 183\", \"SH 310\", \"SH 34\", \"SH 342\", \"SH 356\", \"SL 12\", \"SL 288\", \"SP 244\", \"SP 348\", \"SP 366\", \"SPUR 354\", \"US 175\", \"US 380\", \"US 75\", \"US 77\", \"US 377\", \"US 80\", \"US 54\", \"BU 287P\", \"FM 157\", \"IH 820 \", \"SH 199\", \"SH 26\", \"SH 360\", \"FM 1764\", \"FM 523\", \"FM 1092\", \"FM 1488\", \"FM 518\", \"IH 610\", \"SH 288\", \"SH 332\", \"SH 225\", \"SH 242\", \"SH 249\", \"SH 35\", \"US 90A\", \"IH27\", \"SH 7\", \"FM 1472\", \"LP 20\", \"ODA 181-1\", \"ODA 181-2\", \"ODA 250-1\", \"ODA 250-2\", \"US 82\", \"SH 6\", \"FM 85\", \"LP 281\", \"LP 323\", \"SH 19\", \"SH 198\", \"SH 334\", \"US 259\", \"US 281\", \"FM 1695\", \"FM 3476\", \"FM 933\", \"IH 36\", \"LP 363\", \"SH 195\", \"US 84\", \"BU 287J\", \"IH 44\", \"SH 240\", \"SP 1027 \", \"US 287 \", \"US 55\", \"US 70\", \"SH 71\"];\r\n// const baseType = [\"CTB\", \"HMA Base\"];\r\nconst soilClassSub = [\"GW\",\"GP\",\"GM\",\"GC\",\"SW\",\"SP\",\"SM\",\"SC\",\"ML\",\"CL\",\"OL\",\"MH\",\"CH\",\"OH\",\"Pt\"];\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: '100%',\r\n        '& .MuiTextField-root': {\r\n            width: '100%',\r\n        },\r\n        '& input': {\r\n            width: '100%',\r\n        },\r\n        '& input[type=number]::-webkit-inner-spin-button, input[type=number]::-webkit-outer-spin-button':{\r\n            opacity: 1\r\n        }\r\n    },\r\n    button: {\r\n        marginTop: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    actionsContainer: {\r\n        marginBottom: theme.spacing(2),\r\n    },\r\n    resetContainer: {\r\n        padding: theme.spacing(3),\r\n    },\r\n    dot: {\r\n        borderBottom: '2px dotted',\r\n        marginBottom: '4px'\r\n    },\r\n    helpHolder: {\r\n        padding: theme.spacing(1),\r\n    },\r\n    inputWithHelper: {\r\n        '& label': {\r\n            pointerEvents: 'all'\r\n        }\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        right: theme.spacing(1),\r\n        top: theme.spacing(1),\r\n        color: theme.palette.grey[500],\r\n        zIndex:2\r\n    }\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n    const { children, classes, onClose, ...other } = props;\r\n    return (\r\n        <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n            {children}\r\n            {onClose ? (\r\n                <IconButton aria-label=\"close\" size=\"small\" className={classes.closeButton} onClick={onClose}>\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            ) : null}\r\n        </MuiDialogTitle>\r\n    );\r\n});\r\nconst init = {\r\n    activeStep: 0,\r\n    stepsLength: 3,\r\n    finished: false,\r\n    DesignLife: 20,\r\n    PunchoutsPerMile: 6,\r\n    LanesOneDirection: 2,\r\n    TrafficOneDirection: 60,\r\n    ModulusOfRupture: 4,\r\n    SlabThickness: 25,\r\n    ElasticModulue: 5,\r\n    SoilClassificationSystem:'USCS',\r\n    SoilSub:\"CH\",\r\n    PlasticityIndex:8,\r\n    SubbaseType:\"LTS\",\r\n    SubbaseThickness:12,\r\n    BaseType:'',\r\n    BaseThickness: 15,\r\n    BaseThicknessMin: 0,\r\n    BaseThicknessMax: 15,\r\n    ModulusBase : 400,\r\n    CompositeK: 539,\r\n    Area: null,\r\n    Region: null,\r\n    Highway: null,\r\n    StationBegin: null,\r\n    StationEnd: null,\r\n    currentAreas: Object.keys(counties),\r\n    currentRegions: Object.keys(regions),\r\n    SubbaseThicknessThreshHold:-1,\r\n    SubbaseTypeOpt:['Cement treated subgrade',\r\n        'Lime treated subgrade',\r\n        'Lime-cement treated subgrade',\r\n        'Lime-fly ash treated subgrade',\r\n        'Fly ash treated subgrade',\r\n        'N/A'\r\n    ],\r\n    baseTypeOpt:[\"CTB\", \"HMA Base\"],\r\n    ksTable:new Map(),\r\n    ssTable:[],\r\n    temperature:[],\r\n}\r\nclass CRCP extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {...init};\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if ((prevState.ModulusBase!==this.state.ModulusBase)||(prevState.SoilSub!==this.state.SoilSub)||(prevState.BaseThickness!==this.state.BaseThickness)){\r\n            this.calculateCompositeK();\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        // d3.tsv(stress).then(data_=> {\r\n        //     this.setState({data: data_});\r\n        // });\r\n        d3.csv(kTable).then(_data=>{\r\n            let ksTable = new Map();\r\n            _data.forEach(r=>{\r\n                ksTable.set(''+r['Subgrade K-Value (psi/in.)']+' '+r['Base Thickness (in.)']+' '+r['Modulus of Base Layer (ksi)'],+r['Composite K (psi/in.)']);\r\n            })\r\n            this.setState({ksTable})\r\n        })\r\n        d3.csv(sTable).then(_data=>{\r\n            this.setState({ssTable:_data})\r\n        })\r\n        d3.csv(temperature).then(_data=>{\r\n            this.setState({temperature:_data})\r\n        })\r\n        this.handlePlasticityIndex(this.state.PlasticityIndex);\r\n    }\r\n    computeStress = (SlabThickness)=>{ // F7\r\n        let input = {\r\n            Region: {Input:this.state.Region},\r\n            H1: {Input:SlabThickness,\"L Bound\":0, \"H Bound\":0},\r\n            K: {Input:this.state.CompositeK,\"L Bound\":0, \"H Bound\":0},\r\n            'MR Des': {Input:5},\r\n            'ESALs': {Input:this.state.TrafficOneDirection},\r\n            'FD': {Input:48},\r\n            'PO': {Input:0},\r\n            'STR': {Input:0},\r\n            'MR Inp': {Input:this.state.ModulusOfRupture,\"L Bound\":0},\r\n        }\r\n        debugger\r\n        let B3 = input.H1.Input;\r\n        input.H1[\"L Bound\"] = (B3>25)?25:((B3>30)?30:35);\r\n        input.H1[\"H Bound\"] = (B3<=25)?25:((B3<=30)?30:35);\r\n        let B4 = input.K.Input;\r\n        input.K[\"L Bound\"] = (B4>1000)?1000:((B4>500)?500:100);\r\n        input.K[\"H Bound\"] = (B4<=100)?100:((B4<=500)?500:1000);\r\n        let B7 = input.FD.Input;\r\n        input.PO.Input = Math.round(29.379/(1+(603*(Math.pow(B7,-1.3054)))),0);\r\n        let B5 = input['MR Des'].Input;\r\n        let B6 = input['ESALs'].Input;\r\n        input.STR.Input = Math.round((B5/(Math.pow(B6/48/225000,0.25)))*100)/100;\r\n        let B10 = input['MR Inp'].Input;\r\n        input['MR Inp']['L Bound'] = -2*B10+10;\r\n\r\n\r\n        let data2 = [];\r\n        const Region = input.Region.Input;\r\n        const mapSSTable = {}\r\n        this.state.ssTable.forEach(s=>{\r\n            const A2 = s[\"Region\"];\r\n            const B2 = +s[\"Thickness of Existing Concrete\"];\r\n            const C2 = +s[\"Composite K\"];\r\n            const D2 = +s[\"Thickness of CRCP Overlay\"];\r\n            const E2 = s[\"ID\"];\r\n            const F2 = +s[\"max ESALs\"];\r\n\r\n            const G2 = Math.round((input['MR Des'].Input/Math.pow((F2/48)/225000,0.25) )*100)/100;// stress\r\n            mapSSTable[E2] = {A2,B2,C2,D2,E2,F2,G2};\r\n        });\r\n\r\n        const I = [10,15,20];\r\n        const H = [input.K['L Bound'],input.K['H Bound']];\r\n        [input.H1['L Bound'],input.H1['H Bound']].forEach(H1=>{\r\n            H.forEach(Comp_K=>{\r\n                I.forEach(H2=>{\r\n                    const ID =  `${Region}${H1}${Comp_K}${H2}`;\r\n                    const ESALs = mapSSTable[ID].F2;\r\n                    const STR = mapSSTable[ID].G2;\r\n                    data2.push({Comp_K,ESALs,STR});\r\n                })\r\n            })\r\n        });\r\n\r\n        const jump = H.length*I.length;\r\n        const jump2 = I.length;\r\n        let data3 = [];\r\n        [input.H1['L Bound'],input.H1['H Bound']].forEach((H1,j)=>{\r\n            [input.K.Input].forEach(Comp_K=>{\r\n                I.forEach((_H2,i)=>{\r\n                    const K2 = data2[j*jump + i].ESALs;\r\n                    const K5 = data2[j*jump + jump2 + i].ESALs;\r\n                    const H2 = data2[j*jump + i].Comp_K;\r\n                    const H5 = data2[j*jump + jump2 + i].Comp_K;\r\n                    const L2 = data2[j*jump + i].STR;\r\n                    const L5 = data2[j*jump + jump2 + i].STR;\r\n                    const Q2 = Comp_K;\r\n                    const ESALs =((K2-K5)*Q2+(K5*H2-H5*K2))/(H2-H5);\r\n                    const STR = ((L2-L5)*Q2+(L5*H2-H5*L2))/(H2-H5);\r\n                    data3.push({Comp_K,H1,ESALs,STR});\r\n                })\r\n            })\r\n        });\r\n        let data4 = [];\r\n        [input.H1.Input].forEach((H1)=>{\r\n            [input.K.Input].forEach(Comp_K=>{\r\n                I.forEach((H2,i)=>{\r\n                    const S2 = data3[i].ESALs;\r\n                    const S8 = data3[jump2 + i].ESALs;\r\n                    const P2 = data3[i].H1;\r\n                    const P8 = data3[jump2 + i].H1;\r\n                    const T2 = data3[i].STR;\r\n                    const T8 = data3[jump2 + i].STR;\r\n                    const X2 = H1;\r\n                    const ESALs =((S2-S8)*X2+(S8*P2-P8*S2))/(P2-P8);\r\n                    const STR = ((T2-T8)*X2+(T8*P2-P8*T2))/(P2-P8);\r\n                    const ID = `${Region}${H1}${Comp_K}${ESALs}`;\r\n                    const LN = Math.log(ESALs);\r\n                    data4.push({Comp_K,ESALs,H2,STR,ID,LN});\r\n                })\r\n            })\r\n        });\r\n        function linearRegression(y,x){\r\n            var lr = {}; var n = y.length; var sum_x = 0; var sum_y = 0; var sum_xy = 0; var sum_xx = 0; var sum_yy = 0;\r\n\r\n            for (var i = 0; i < y.length; i++) {\r\n                sum_x += x[i];\r\n                sum_y += y[i];\r\n                sum_xy += (x[i]*y[i]);\r\n                sum_xx += (x[i]*x[i]);\r\n                sum_yy += (y[i]*y[i]);\r\n            }\r\n\r\n            lr['slope'] = (n * sum_xy - sum_x * sum_y) / (n*sum_xx - sum_x * sum_x);\r\n            lr['intercept'] = (sum_y - lr.slope * sum_x)/n;\r\n            lr['r2'] = Math.pow((n*sum_xy - sum_x*sum_y)/Math.sqrt((n*sum_xx-sum_x*sum_x)*(n*sum_yy-sum_y*sum_y)),2);\r\n\r\n            return lr;\r\n        }\r\n        let lr = linearRegression(data4.map(d=>d.LN),data4.map(d=>d.H2));\r\n        const W19 = lr.slope;\r\n        const X19 = lr.intercept;\r\n        let data5 = {Region,H1:input.H1.Input,Comp_K:input.K.Input,'Input_ESALs':input.ESALs.Input,'Input_STR':input.STR.Input};\r\n        data5.ID = `${data5.Region}${data5.H1}${data5.Comp_K}${data5.Input_ESALs}`;\r\n\r\n        const _lookup = data4.find(d=>d.ID===data5.ID);\r\n        data5.H2 = Math.round(((_lookup??{H2:((Math.log(data5['Input_ESALs']))-X19)/W19}).H2+input['MR Inp']['L Bound'])*10)/10;\r\n\r\n        return data5.H2;\r\n    }\r\n    recompute = ()=>{\r\n        // let __ret = {};\r\n        // let i = 25;\r\n        // for (i=25;i<=35;i++) {\r\n        //     __ret = this.analysis(i);\r\n        //     console.log(__ret.rows[__ret.r][12])\r\n        //     if(__ret.rows[__ret.r][12]<=this.state.PunchoutsPerMile)\r\n        //         break;\r\n        // }\r\n        // let rowIndexStress = __ret.rowIndexStress;\r\n        // let row1 = __ret.row1;\r\n        // const rows = __ret.rows;\r\n        // var r = __ret.r;\r\n        // this.props.AnalysisPunchouts(rows[r][12]);\r\n        // // this.props.AnalysisSlabThickness(Math.min(13,i));\r\n        // this.props.AnalysisSlabThickness(Math.min(i,15));\r\n        // this.setState({row1,rows,rowIndexStress})\r\n\r\n\r\n        // new\r\n        const AnalysisSlabThickness = this.computeStress(this.state.SlabThickness);\r\n        this.props.AnalysisSlabThickness(AnalysisSlabThickness);\r\n        this.setState({JCPC:this.state.SlabThickness-AnalysisSlabThickness})\r\n    };\r\n\r\n    analysis(slabthickness) {\r\n        const data = this.computeStress(slabthickness);\r\n\r\n        let rowIndexStress = 8;\r\n        let row1 = [];\r\n        const rows = [];\r\n        row1.push(1);\r\n        row1.push(row1[0] / 12);\r\n        row1.push(this.state.ModulusOfRupture);\r\n        row1.push(57000 / 7.5 * row1[2] / 1000);\r\n        row1.push(+data[rowIndexStress - 2][\"STR (T)\"]);\r\n        row1.push(data[rowIndexStress - 2][\"STR (E)\"] * row1[3] / 5000)\r\n        row1.push(row1[4] + row1[5])\r\n        row1.push(row1[6] / row1[2])\r\n        row1.push(11800 * Math.pow(row1[7], fatigue(this.state.CompositeK)))\r\n        row1.push(lane(this.state.LanesOneDirection)\r\n            * this.state.TrafficOneDirection * 1000000 / 12 / this.state.DesignLife)\r\n        row1.push(row1[9] / row1[8])\r\n        row1.push(row1[10])\r\n        row1.push(18.985 / (1 + 5 * Math.pow(row1[11], -1.1)))\r\n        rows.push(row1);    // Add to the array\r\n\r\n        //console.log(+document.getElementById(\"DesignLife\").value);\r\n        for (var i = 1; i <= this.state.DesignLife; i++) {\r\n            //debugger;\r\n            if (i !== 1)\r\n                rowIndexStress = 7;\r\n            for (var j = 0; j < 12; j++) {\r\n                if (i == 1 && j == 0)\r\n                    ;\r\n                    //If counterYear = 1 And counterMonth = 1 Then\r\n                //      'If First Year than Omit Calculation of First Month, Already Done\r\n                else {\r\n                    rowIndexStress = rowIndexStress + 1\r\n                    let row2 = [];\r\n                    row2.push(row1[0] + 1)\r\n                    row2.push(row2[0] / 12);\r\n                    // Cells(rowIndex, 2) = Cells(rowIndex, 1).Value / 12\r\n                    row2.push(this.state.ModulusOfRupture\r\n                        * Math.pow((30 * row2[0] / (4 + 0.85 * 30 * row2[0])), 0.5));\r\n                    // Cells(rowIndex, 3) = Sheets(\"Input\").Range(\"F8\").Value * ((30 * Cells(rowIndex, 1).Value / (4 + 0.85 * 30 * Cells(rowIndex, 1).Value))) ^ 0.5\r\n                    row2.push(57000 / 7.5 * row2[2] / 1000);\r\n                    // Cells(rowIndex, 4) = 57000 / 7.5 * Cells(rowIndex, 3) / 1000\r\n                    row2.push(+data[rowIndexStress - 2][\"STR (T)\"]);\r\n                    // Cells(rowIndex, 5) = Sheets(\"Stress\").Cells(rowIndexStress, 38).Value\r\n                    row2.push(data[rowIndexStress - 2][\"STR (E)\"] * row2[3] / 5000);\r\n                    // Cells(rowIndex, 6) = Sheets(\"Stress\").Cells(rowIndexStress, 39).Value * Cells(rowIndex, 4) / 5000\r\n                    row2.push(row2[4] + row2[5]);\r\n                    // Cells(rowIndex, 7) = Cells(rowIndex, 5).Value + Cells(rowIndex, 6).Value\r\n                    row2.push(row2[6] / row2[2]);\r\n                    // Cells(rowIndex, 8) = Cells(rowIndex, 7).Value / Cells(rowIndex, 3).Value\r\n                    row2.push(11800 * Math.pow(row2[7], fatigue(this.state.CompositeK)));\r\n                    // Cells(rowIndex, 9) = 11800 * Cells(rowIndex, 8).Value ^ fatigue(Sheets(\"Input\").Range(\"CompositeK\").Value)\r\n                    row2.push(row1[9]);\r\n                    // Cells(rowIndex, 10) = Cells(rowIndex - 1, 10).Value\r\n                    row2.push(row2[9] / row2[8]);\r\n                    // Cells(rowIndex, 11) = Cells(rowIndex, 10).Value / Cells(rowIndex, 9).Value\r\n                    row2.push(row1[11] + row2[10])\r\n                    // Cells(rowIndex, 12) = Cells(rowIndex - 1, 12).Value + Cells(rowIndex, 11).Value\r\n                    row2.push(18.985 / (1 + 5 * Math.pow(row2[11], -1.1)))\r\n                    // Cells(rowIndex, 13) = 18.985 / (1 + 5 * Cells(rowIndex, 12).Value ^ -1.1)\r\n                    if (rowIndexStress == 13)\r\n                        rowIndexStress = 1\r\n                    rows.push(row2);\r\n                    row1 = row2;\r\n                }\r\n            }\r\n        }\r\n        var r = 12 * this.state.DesignLife - 1;\r\n        return {rowIndexStress, row1, rows, r};\r\n        function lane(n) {\r\n            if (n <= 2)\r\n                return 1;\r\n            else if (n >= 4)\r\n                return 0.6;\r\n            else\r\n                return 0.7;\r\n        }\r\n\r\n        function fatigue(k) {\r\n            if (k < 200)\r\n                return k * 0.0221 - 15.97;\r\n            else if (k < 300)\r\n                return k * 0.0164 - 14.83;\r\n            else if (k < 500)\r\n                return k * 0.0038 - 11.05;\r\n            else if (k < 1000)\r\n                return k * 0.00033 - 9.31;\r\n            else\r\n                return k * 0.00071 - 9.69;\r\n        }\r\n    }\r\n\r\n    errorFunc={\r\n        Step3:{\r\n            'SubbaseThickness': ()=>this.state.SubbaseThickness<this.state.SubbaseThicknessThreshHold?`Must greater than ${this.state.SubbaseThicknessThreshHold}`:(this.state.SubbaseThickness===''?'Required':null),\r\n            'BaseThickness': ()=>(this.state.BaseThickness<this.state.BaseThicknessMin)?`≥ ${this.state.BaseThicknessMin}`:(this.state.BaseThickness===''?'Required':null)\r\n        }\r\n    };\r\n\r\n    handleNext = () => {\r\n        this.setState({activeStep: this.state.activeStep + 1});\r\n    };\r\n\r\n    handleBack = () => {\r\n        this.setState({activeStep: this.state.activeStep - 1});\r\n    };\r\n\r\n    handleModify = () => {\r\n        this.setState({activeStep: 0, finished:false});\r\n    };\r\n\r\n    handleReset = () => {\r\n        this.setState({...init});\r\n    };\r\n\r\n    onSaveInput = () => {\r\n        let filename = `txDoT_${this.state.Area}_${new Date().toISOString().replace('.','|')}`;\r\n        let saveDataKey = ['DesignLife', 'PunchoutsPerMile', 'LanesOneDirection', 'TrafficOneDirection', 'ModulusOfRupture','SlabThickness',\r\n            'ElasticModulue', 'SoilClassificationSystem', 'SoilSub', 'PlasticityIndex', 'SubbaseType',\r\n            'SubbaseThickness', 'BaseType', 'BaseThickness', 'BaseThicknessMin', 'ModulusBase',\r\n            'CompositeK', 'Area', 'Region', 'Highway', 'StationBegin', 'StationEnd',\r\n            'currentAreas', 'currentRegions', 'SubbaseThicknessThreshHold', 'SubbaseTypeOpt', 'baseTypeOpt'];\r\n        const saveData = {};\r\n        saveDataKey.forEach(k=>saveData[k]=this.state[k]);\r\n        const jsonse = JSON.stringify(saveData);\r\n        let blob = new Blob([jsonse], {type: \"application/json\"});\r\n\r\n        // Specify link url\r\n        let url = URL.createObjectURL(blob);\r\n        // Specify file name\r\n        filename = filename?filename+'.json':'txDot.json';\r\n\r\n        // Create download link element\r\n        let downloadLink = document.createElement(\"a\");\r\n\r\n        document.body.appendChild(downloadLink);\r\n\r\n        if(navigator.msSaveOrOpenBlob ){\r\n            navigator.msSaveOrOpenBlob(blob, filename);\r\n        }else{\r\n            // Create a link to the file\r\n            downloadLink.href = url;\r\n\r\n            // Setting the file name\r\n            downloadLink.download = filename;\r\n\r\n            //triggering the function\r\n            downloadLink.click();\r\n        }\r\n\r\n        document.body.removeChild(downloadLink);\r\n    }\r\n\r\n    handleOpenHelper = (content,freeze) => (event) => {\r\n        if (this.state.helperEl) {\r\n            if (this.state.helperEl.el === event.currentTarget && freeze && this.state.helperEl.freeze) // same target\r\n                this.handleCloseHelper(event);\r\n            else {\r\n                if (freeze || this.state.helperEl.el !== event.currentTarget && freeze)\r\n                    this.setState({helperEl: {el: event.currentTarget, content, freeze}})\r\n            }\r\n        }else{\r\n            this.setState({helperEl: {el: event.currentTarget, content, freeze}})\r\n        }\r\n    };\r\n\r\n    handleCloseHelper = (source) => {\r\n        if(source.type!=='mouseleave' || source.type==='mouseleave'&&this.state.helperEl&& (!this.state.helperEl.freeze))\r\n        this.setState({helperEl: undefined})\r\n    };\r\n\r\n    handleBlurSliderInput = (key, min, max) => {\r\n        const value = this.state[key];\r\n        const obj = {};\r\n        if (value < min) {\r\n            obj[key] = min;\r\n            this.setState(obj);\r\n        } else if (value > max) {\r\n            obj[key] = max;\r\n            this.setState(obj);\r\n        }\r\n    }\r\n    handleChangeSliderInput = (event, key) => {\r\n        const obj = {};\r\n        obj[key] = event.target.value === '' ? '' : Number(event.target.value);\r\n        this.setState(obj);\r\n    }\r\n    handleChange = (key, value) => {\r\n        const obj = {};\r\n        obj[key] = value;\r\n        this.setState(obj);\r\n    };\r\n    handleSoilSub = (value)=>{\r\n        let baseTypeOpt = [\"CTB\", \"HMA Base\"];\r\n        let BaseType = this.state.BaseType;\r\n        if (this.state.PlasticityIndex>=15){\r\n            if ([\"ML\", \"CL\", \"OL\", \"MH\", \"CH\", \"OH\"].indexOf(value)!==-1)\r\n             {   baseTypeOpt = [\"CTB\"];\r\n                 BaseType = \"CTB\";\r\n             }\r\n        }\r\n        this.setState({SoilSub:value,baseTypeOpt,BaseType});\r\n    };\r\n    handleBaseType = (value) => {\r\n        let BaseThicknessMin = 4;\r\n        let BaseThickness = this.state.BaseThickness;\r\n        let ModulusBase = 400;\r\n        if (value==='CTB'){\r\n            BaseThicknessMin = 6;\r\n            ModulusBase = 500;\r\n        }\r\n        if (BaseThickness<BaseThicknessMin)\r\n            BaseThickness = BaseThicknessMin;\r\n        this.setState({BaseType:value,BaseThicknessMin,BaseThickness,ModulusBase});\r\n    }\r\n    handlePlasticityIndex = (value)=>{\r\n        let SubbaseTypeOpt = [];\r\n        let SubbaseThicknessThreshHold = -1;\r\n        if (value<15){\r\n            SubbaseTypeOpt = ['Cement treated subgrade','Lime-fly ash treated subgrade','N/A'];\r\n        }else if (value<35){\r\n            SubbaseTypeOpt = ['Cement treated subgrade',\r\n                'Lime treated subgrade',\r\n                'Lime-cement treated subgrade',\r\n                'Lime-fly ash treated subgrade',\r\n                'Fly ash treated subgrade','N/A'];\r\n        }else{\r\n            SubbaseTypeOpt = ['Lime treated subgrade',\r\n                'Lime-cement treated subgrade',\r\n                'Lime-fly ash treated subgrade','N/A'];\r\n            SubbaseThicknessThreshHold = 8;\r\n        }\r\n        this.setState({PlasticityIndex:value,SubbaseTypeOpt,SubbaseThicknessThreshHold});\r\n        this.handleBaseType(this.state.BaseType);\r\n    };\r\n    calculateCompositeK = ()=>{\r\n        const {ModulusBase,SoilSub,BaseThickness,ksTable} = this.state;\r\n        debugger\r\n        this.setState({CompositeK: ksTable.get(''+getSubgradeValue(SoilSub)+' '+Math.round(BaseThickness)+' '+getModulusBase(ModulusBase))});\r\n\r\n        function getSubgradeValue(SoilSub){\r\n            switch (SoilSub) {\r\n                case \"A-1-a\":\r\n                case \"A-2-4\":\r\n                case \"A-2-5\":\r\n                case \"GW\":\r\n                case \"GP\":\r\n                case \"GM\":\r\n                case \"SM\":\r\n                    return 300;\r\n                case \"A-1-b\":\r\n                case \"SW\":\r\n                    return 200;\r\n                case \"A-3\":\r\n                case \"A-2-6\":\r\n                case \"A-2-7\":\r\n                case \"SP\":\r\n                case \"GC\":\r\n                case \"SC\":\r\n                    return 150;\r\n                case \"A-7-6\":\r\n                case \"CH\":\r\n                case \"OH\":\r\n                    return 50;\r\n                case \"A-4\":\r\n                case \"A-5\":\r\n                case \"A-7-5\":\r\n                case \"ML\":\r\n                case \"OL\":\r\n                case \"MH\":\r\n                case \"CL\":\r\n                    return 25;\r\n            }\r\n        }\r\n        function getModulusBase(ModulusBase){\r\n            if (ModulusBase<=100)\r\n                return Math.round(ModulusBase/10)*10;\r\n            else if((ModulusBase>100)&&(ModulusBase<1000)&&((ModulusBase%50) <25))\r\n                return ModulusBase-(ModulusBase%50)\r\n            else if((ModulusBase>100)&&(ModulusBase<1000)&&((ModulusBase%50)>=25))\r\n                return ModulusBase+50-(ModulusBase%50)\r\n            else if(ModulusBase>=1000)\r\n                return Math.round(ModulusBase/100)*100;\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {classes} = this.props;\r\n        const getGroupControl = () => {\r\n            return <div className={classes.actionsContainer}>\r\n                <div>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        onClick={this.props.toMenu}\r\n                        className={classes.button}\r\n                        startIcon={<HomeIcon/>}\r\n                    >\r\n                        To Main Menu\r\n                    </Button>\r\n                    <Button\r\n                        disabled={this.state.activeStep === 0}\r\n                        onClick={this.handleBack}\r\n                        className={classes.button}\r\n                    >\r\n                        Back\r\n                    </Button>\r\n                    <Button\r\n                        disabled={!this.state.Area}\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={this.handleNext}\r\n                        className={classes.button}\r\n                    >\r\n                        {this.state.activeStep === this.state.stepsLength - 1 ? 'Finish' : 'Next'}\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        }\r\n        if ((this.state.activeStep === this.state.stepsLength) && !this.state.finished){\r\n            this.setState({finished: true});\r\n            this.recompute();\r\n        }\r\n        return (<Container maxWidth=\"lg\"> <Paper elevation={3}>\r\n            <Grid container>\r\n            <Grid item xs={this.state.finished?2:12}>\r\n            <Stepper activeStep={this.state.activeStep} orientation=\"vertical\">\r\n                <Step>\r\n                    <StepLabel>Step 1</StepLabel>\r\n                    <StepContent displayPrint=\"block\">\r\n                        <form className={classes.root} noValidate autoComplete=\"off\">\r\n                            <Grid container spacing={4}>\r\n                                <Grid container item xs={12} spacing={1} justify=\"center\">\r\n                                    <Grid item xs={12} sm={6} md={3}>\r\n                                        <Autocomplete\r\n                                            margin=\"dense\"\r\n                                            id=\"region\"\r\n                                            value={this.state.Region}\r\n                                            options={this.state.currentRegions}\r\n                                            size=\"small\"\r\n                                            style={{marginTop: 8, marginBottom: 4}}\r\n                                            onChange={(event, value, reason) => {\r\n                                                if (value == null)\r\n                                                    this.setState({\r\n                                                        Region: value,\r\n                                                        Area: null,\r\n                                                        currentAreas: Object.keys(counties)\r\n                                                    });\r\n                                                else\r\n                                                    this.setState({\r\n                                                        Region: value,\r\n                                                        Area: null,\r\n                                                        currentAreas: regions[value]\r\n                                                    });\r\n                                            }}\r\n                                            renderInput={(params) => <TextField dense {...params} variant=\"filled\"\r\n                                                                                className={classes.inputWithHelper}\r\n                                                                                required\r\n                                                                                error={!this.state.Area}\r\n                                                                                label={<>Region<IconButton\r\n                                                                                    aria-label=\"info\"\r\n                                                                                    className={classes.margin}\r\n                                                                                    size=\"small\">\r\n                                                                                    <InfoIcon fontSize=\"small\"\r\n                                                                                              onClick={this.handleOpenHelper({src: RegionPic},true)}\r\n                                                                                              onMouseEnter={this.handleOpenHelper({src: RegionPic})}\r\n                                                                                              onMouseLeave={this.handleCloseHelper}\r\n                                                                                    /></IconButton></>}\r\n                                            />}/>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={6} md={3}>\r\n                                        <Autocomplete\r\n                                            margin=\"dense\"\r\n                                            id=\"area\"\r\n                                            value={this.state.Area}\r\n                                            options={this.state.currentAreas}\r\n                                            onChange={(event, value) => {\r\n                                                if (value)\r\n                                                    this.setState({\r\n                                                        Area: value,\r\n                                                        Region: counties[value].length === 1 ? counties[value][0] : null\r\n                                                    });\r\n                                                else\r\n                                                    this.setState({Area: value})\r\n                                            }}\r\n                                            size=\"small\"\r\n                                            style={{marginTop: 8, marginBottom: 4}}\r\n                                            renderInput={(params) => <TextField dense {...params}\r\n                                                                                className={classes.inputWithHelper}\r\n                                                                                label={<>Area<IconButton\r\n                                                                                    aria-label=\"info\"\r\n                                                                                    className={classes.margin}\r\n                                                                                    size=\"small\">\r\n                                                                                    <InfoIcon fontSize=\"small\"\r\n                                                                                              onClick={this.handleOpenHelper({src: AreaPic},true)}\r\n                                                                                              onMouseEnter={this.handleOpenHelper({src: AreaPic})}\r\n                                                                                              onMouseLeave={this.handleCloseHelper}\r\n                                                                                    /></IconButton></>}\r\n                                                                                    // <InfoIcon fontSize=\"small\"\r\n                                                                                    //           onClick={this.handleOpenHelper({map: 'region'},true)}\r\n                                                                                    //           onMouseEnter={this.handleOpenHelper({map: 'region'})}\r\n                                                                                    //           onMouseLeave={this.handleCloseHelper}\r\n                                                                                    // /></IconButton></>}\r\n                                                                                variant=\"filled\"/>}/>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={6} md={3}>\r\n                                        <Autocomplete\r\n                                            margin=\"dense\"\r\n                                            id=\"highway\"\r\n                                            options={highway}\r\n                                            value={this.state.Highway}\r\n                                            onChange={(event, value) => this.handleChange('Highway', value)}\r\n                                            size=\"small\"\r\n                                            freeSolo\r\n                                            style={{marginTop: 8, marginBottom: 4}}\r\n                                            renderInput={(params) => <TextField dense {...params} label=\"HIGHWAY\"\r\n                                                                                variant=\"filled\"/>}/>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={6} md={3}>\r\n                                        <TextField\r\n                                            margin=\"dense\"\r\n                                            id=\"DirectionOfConstruction\"\r\n                                            label=\"DIRECTION OF CONSTRUCTION\"\r\n                                            value={this.state.DirectionOfConstruction}\r\n                                            onChange={(event) => this.handleChange('DirectionOfConstruction', event.target.value)}\r\n                                            variant=\"filled\"/>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={6} md={3}>\r\n                                        <TextField\r\n                                            margin=\"dense\"\r\n                                            id=\"StationBegin\"\r\n                                            label=\"STATION (BEGIN)\"\r\n                                            value={this.state.StationBegin}\r\n                                            onChange={(event) => this.handleChange('StationBegin', event.target.value)}\r\n                                            variant=\"filled\"/>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={6} md={3}>\r\n                                        <TextField\r\n                                            margin=\"dense\"\r\n                                            id=\"StationEnd\"\r\n                                            label=\"STATION (END)\"\r\n                                            value={this.state.StationEnd}\r\n                                            onChange={(event) => this.handleChange('StationEnd', event.target.value)}\r\n                                            variant=\"filled\"/>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={6} md={3}>\r\n                                        <TextField\r\n                                            margin=\"dense\"\r\n                                            id=\"date\"\r\n                                            type=\"date\"\r\n                                            label=\"DATE\"\r\n                                            value={this.state.Date}\r\n                                            onChange={(event) => this.handleChange('Date', event.target.value)}\r\n                                            InputLabelProps={{\r\n                                                shrink: true,\r\n                                            }}\r\n                                            variant=\"filled\"/>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Grid container item xs={12} spacing={1}>\r\n                                    <TextField\r\n                                        id=\"comment\"\r\n                                        label=\"COMMENTS\"\r\n                                        multiline\r\n                                        onChange={(event) => this.handleChange('Comment', event.target.value)}\r\n                                        rows={4}\r\n                                        defaultValue=\"\"\r\n                                        variant=\"filled\"\r\n                                    />\r\n                                </Grid>\r\n                            </Grid>\r\n                        </form>\r\n                        {getGroupControl()}\r\n                    </StepContent>\r\n                </Step>\r\n                <Step>\r\n                    <StepLabel>Step 2</StepLabel>\r\n                    <StepContent displayPrint=\"block\">\r\n                        <form className={classes.root} noValidate autoComplete=\"off\">\r\n                            <Grid container spacing={4}>\r\n                                <Grid container item xs={12} spacing={1} alignItems=\"flex-end\" justify=\"center\">\r\n                                    <Grid item xs={12} justify=\"flex-start\">\r\n                                        <Typography variant={'h6'}>Basic Design Information</Typography>\r\n                                    </Grid>\r\n                                    <Grid container item xs={11} md={10} lg={8} spacing={1} justify=\"center\"\r\n                                          alignItems=\"flex-end\">\r\n                                        <Grid item xs={8} justify=\"flex-start\">\r\n                                            <Grid container xs={12} justify=\"flex-start\">\r\n                                                <span>Design life (years)</span>\r\n                                                <span className={classes.dot} style={{flexGrow: 1}}/>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Grid item xs={3} sm={4} md={3}>\r\n                                            <Slider\r\n                                                value={this.state.DesignLife}\r\n                                                onChange={(event, newValue) => this.setState({DesignLife: newValue})}\r\n                                                defaultValue={30}\r\n                                                min={10} max={30}\r\n                                                id=\"DesignLife\"\r\n                                            />\r\n                                        </Grid>\r\n                                        <Hidden smDown>\r\n                                            <Grid item xs={1}>\r\n                                                <Input\r\n                                                    value={this.state.DesignLife}\r\n                                                    onChange={(event) => this.handleChangeSliderInput(event, 'DesignLife')}\r\n                                                    onBlur={() => this.handleBlurSliderInput('DesignLife', 10, 30)}\r\n                                                    id=\"DesignLife\"\r\n                                                    InputLabelProps={{\r\n                                                        shrink: true,\r\n                                                    }}\r\n                                                    inputProps={{\r\n                                                        min: 10,\r\n                                                        max: 30,\r\n                                                        type: 'number',\r\n                                                    }}\r\n                                                />\r\n                                            </Grid>\r\n                                        </Hidden>\r\n                                        <Grid item xs={8} justify=\"flex-start\">\r\n                                            <Grid container xs={12} justify=\"flex-start\">\r\n                                                <span>Total number of lanes in one direction</span>\r\n                                                <span className={classes.dot} style={{flexGrow: 1}}/>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Grid item xs={3} xm={4} md={3}>\r\n                                            <Slider\r\n                                                value={this.state.LanesOneDirection}\r\n                                                onChange={(event, newValue) => this.setState({LanesOneDirection: newValue})}\r\n                                                defaultValue={2}\r\n                                                min={1} max={10}\r\n                                                id=\"LanesOneDirection\"\r\n                                            />\r\n                                        </Grid>\r\n                                        <Hidden smDown>\r\n                                            <Grid item xs={1}>\r\n                                                <Input\r\n                                                    value={this.state.LanesOneDirection}\r\n                                                    onChange={(event) => this.handleChangeSliderInput(event, 'LanesOneDirection')}\r\n                                                    onBlur={() => this.handleBlurSliderInput('LanesOneDirection', 1, 10)}\r\n                                                    id=\"LanesOneDirection\"\r\n                                                    InputLabelProps={{\r\n                                                        shrink: true,\r\n                                                    }}\r\n                                                    inputProps={{\r\n                                                        min: 1,\r\n                                                        max: 10,\r\n                                                        type: 'number',\r\n                                                    }}\r\n                                                />\r\n                                            </Grid>\r\n                                        </Hidden>\r\n                                        <Grid item xs={8} justify=\"flex-start\">\r\n                                            <Grid container xs={12} justify=\"flex-start\">\r\n                                                <span>Total design traffic in one direction (million ESAL)</span>\r\n                                                <IconButton aria-label=\"info\" className={classes.margin} size=\"small\">\r\n                                                    <InfoIcon fontSize=\"small\"\r\n                                                              onClick={this.handleOpenHelper({src: TrafficOneDirectionPic},true)}\r\n                                                              onMouseEnter={this.handleOpenHelper({src: TrafficOneDirectionPic})}\r\n                                                              onMouseLeave={this.handleCloseHelper}\r\n                                                    />\r\n                                                </IconButton>\r\n                                                <span className={classes.dot} style={{flexGrow: 1}}/>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Grid item xs={3} xm={4} md={3}>\r\n                                            <Slider\r\n                                                value={this.state.TrafficOneDirection}\r\n                                                onChange={(event, newValue) => this.setState({TrafficOneDirection: newValue})}\r\n                                                defaultValue={100}\r\n                                                min={30} max={150}\r\n                                                id=\"TrafficOneDirection\"\r\n                                            />\r\n                                        </Grid>\r\n                                        <Hidden smDown>\r\n                                            <Grid item xs={1}>\r\n                                                <Input\r\n                                                    value={this.state.TrafficOneDirection}\r\n                                                    onChange={(event) => this.handleChangeSliderInput(event, 'TrafficOneDirection')}\r\n                                                    onBlur={() => this.handleBlurSliderInput('TrafficOneDirection', 30, 150)}\r\n                                                    id=\"TrafficOneDirection\"\r\n                                                    InputLabelProps={{\r\n                                                        shrink: true,\r\n                                                    }}\r\n                                                    inputProps={{\r\n                                                        min: 30,\r\n                                                        max: 150,\r\n                                                        type: 'number',\r\n                                                    }}\r\n                                                />\r\n                                            </Grid>\r\n                                        </Hidden>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Grid container item xs={12} spacing={1} alignItems=\"flex-end\" justify=\"center\">\r\n                                    <Grid item xs={12} container justify=\"flex-start\">\r\n                                        <Typography variant={'h6'}>Structural Design Criteria</Typography>\r\n                                        <IconButton aria-label=\"info\" className={classes.margin} size=\"small\">\r\n                                            <InfoIcon fontSize=\"small\"\r\n                                                      onClick={this.handleOpenHelper({src: StructureDesignCriteriaPic},true)}\r\n                                                      onMouseEnter={this.handleOpenHelper({src: StructureDesignCriteriaPic})}\r\n                                                      onMouseLeave={this.handleCloseHelper}\r\n                                            />\r\n                                        </IconButton>\r\n                                    </Grid>\r\n                                    <Grid container item xs={11} md={10} lg={8} spacing={1} justify=\"center\"\r\n                                          alignItems=\"flex-end\">\r\n                                        <Grid item xs={8} justify=\"flex-start\">\r\n                                            <Grid container xs={12} justify=\"flex-start\">\r\n                                                <span>Acceptable punchout per km</span>\r\n                                                <IconButton aria-label=\"info\" className={classes.margin} size=\"small\">\r\n                                                    <InfoIcon fontSize=\"small\"\r\n                                                              onClick={this.handleOpenHelper({src: AcceptableNumberofPunchoutPic},true)}\r\n                                                              onMouseEnter={this.handleOpenHelper({src: AcceptableNumberofPunchoutPic})}\r\n                                                              onMouseLeave={this.handleCloseHelper}\r\n                                                    />\r\n                                                </IconButton>\r\n                                                <span className={classes.dot} style={{flexGrow: 1}}/>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Grid item xs={3} xm={4} md={3}>\r\n                                            <Slider\r\n                                                value={this.state.PunchoutsPerMile}\r\n                                                onChange={(event, newValue) => this.setState({PunchoutsPerMile: newValue})}\r\n                                                defaultValue={5}\r\n                                                min={1} max={10}\r\n                                                id=\"PunchoutsPerMile\"\r\n                                                disabled\r\n                                            />\r\n                                        </Grid>\r\n                                        <Hidden smDown>\r\n                                            <Grid item xs={1}>\r\n                                                <Input\r\n                                                    value={this.state.PunchoutsPerMile}\r\n                                                    onChange={(event) => this.handleChangeSliderInput(event, 'PunchoutsPerMile')}\r\n                                                    onBlur={() => this.handleBlurSliderInput('PunchoutsPerMile', 1, 10)}\r\n                                                    id=\"PunchoutsPerMile\"\r\n                                                    InputLabelProps={{\r\n                                                        shrink: true,\r\n                                                    }}\r\n                                                    inputProps={{\r\n                                                        min: 1,\r\n                                                        max: 10,\r\n                                                        type: 'number',\r\n                                                    }}\r\n                                                    disabled\r\n                                                />\r\n                                            </Grid>\r\n                                        </Hidden>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Grid container item xs={12} spacing={1} alignItems=\"flex-end\" justify=\"center\">\r\n                                    <Grid item xs={12} container justify=\"flex-start\">\r\n                                        <Typography variant={'h6'}>Concrete Layer/Material Information</Typography>\r\n                                        <IconButton aria-label=\"info\" className={classes.margin} size=\"small\">\r\n                                            <InfoIcon fontSize=\"small\"\r\n                                                      onClick={this.handleOpenHelper({src: ConcreteLayerPic},true)}\r\n                                                      onMouseEnter={this.handleOpenHelper({src: ConcreteLayerPic})}\r\n                                                      onMouseLeave={this.handleCloseHelper}\r\n                                            />\r\n                                        </IconButton>\r\n                                    </Grid>\r\n                                    <Grid container item xs={11} md={10} lg={8} spacing={1} justify=\"center\"\r\n                                          alignItems=\"flex-end\">\r\n                                        <Grid item xs={8} justify=\"flex-start\">\r\n                                            <Grid container xs={12} justify=\"flex-start\">\r\n                                                <span>28-day modulus of rupture (MPa)</span>\r\n                                                <span className={classes.dot} style={{flexGrow: 1}}/>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Hidden smDown>\r\n                                            <Grid item xs={3} sm={4} md={3}>\r\n                                                <Slider\r\n                                                    value={this.state.ModulusOfRupture}\r\n                                                    onChange={(event, newValue) => this.setState({ModulusOfRupture: newValue})}\r\n                                                    id=\"ModulusOfRupture\"\r\n                                                    defaultValue={4}\r\n                                                    min={4} max={5}\r\n                                                    disabled\r\n                                                />\r\n                                            </Grid>\r\n                                        </Hidden>\r\n                                        <Grid item xs={1}>\r\n                                            <Input\r\n                                                value={this.state.ModulusOfRupture}\r\n                                                onChange={(event) => this.handleChangeSliderInput(event, 'ModulusOfRupture')}\r\n                                                onBlur={() => this.handleBlurSliderInput('ModulusOfRupture', 4, 5)}\r\n                                                id=\"ModulusOfRupture\"\r\n                                                InputLabelProps={{\r\n                                                    shrink: true,\r\n                                                }}\r\n                                                inputProps={{\r\n                                                    min: 4,\r\n                                                    max: 5,\r\n                                                    type: 'number',\r\n                                                }}\r\n                                                disabled\r\n                                            />\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                    <Grid container item xs={11} md={10} lg={8} spacing={1} justify=\"center\"\r\n                                          alignItems=\"flex-end\">\r\n                                        <Grid item xs={8} justify=\"flex-start\">\r\n                                            <Grid container xs={12} justify=\"flex-start\">\r\n                                                <span>Existing slab thickness (cm)</span>\r\n                                                <span className={classes.dot} style={{flexGrow: 1}}/>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Hidden smDown>\r\n                                            <Grid item xs={3} sm={4} md={3}>\r\n                                                <Slider\r\n                                                    value={this.state.SlabThickness}\r\n                                                    onChange={(event, newValue) => this.setState({SlabThickness: newValue})}\r\n                                                    id=\"SlabThickness\"\r\n                                                    defaultValue={25}\r\n                                                    min={25} max={35}\r\n                                                    disabled\r\n                                                />\r\n                                            </Grid>\r\n                                        </Hidden>\r\n                                        <Grid item xs={1}>\r\n                                            <Input\r\n                                                value={this.state.SlabThickness}\r\n                                                onChange={(event) => this.handleChangeSliderInput(event, 'SlabThickness')}\r\n                                                onBlur={() => this.handleBlurSliderInput('SlabThickness', 25, 35)}\r\n                                                id=\"SlabThickness\"\r\n                                                InputLabelProps={{\r\n                                                    shrink: true,\r\n                                                }}\r\n                                                inputProps={{\r\n                                                    min: 25,\r\n                                                    max: 35,\r\n                                                    type: 'number',\r\n                                                }}\r\n                                            />\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </form>\r\n                        {getGroupControl()}\r\n                    </StepContent>\r\n                </Step>\r\n                <Step>\r\n                    <StepLabel>Step 3</StepLabel>\r\n                    <StepContent displayPrint=\"block\">\r\n                        <form className={classes.root} noValidate autoComplete=\"off\">\r\n                            <Grid container spacing={4}>\r\n                                <Grid container item xs={12} spacing={1} alignItems=\"flex-end\" justify=\"center\">\r\n                                    <Grid item xs={12} justify=\"flex-start\">\r\n                                        <Typography variant={'h6'}>Subgrade and Treatment Information</Typography>\r\n                                    </Grid>\r\n                                    <Grid container item xs={11} md={10} lg={8} spacing={1} justify=\"center\"\r\n                                          alignItems=\"flex-end\">\r\n                                        <Grid item xs={8} justify=\"flex-start\">\r\n                                            <Grid container xs={12} justify=\"flex-start\">\r\n                                                <span>Soil classification system</span>\r\n                                                <IconButton aria-label=\"info\" className={classes.margin} size=\"small\">\r\n                                                    <InfoIcon fontSize=\"small\"\r\n                                                              onClick={this.handleOpenHelper({src: soilSystermPic},true)}\r\n                                                              onMouseEnter={this.handleOpenHelper({src: soilSystermPic})}\r\n                                                              onMouseLeave={this.handleCloseHelper}\r\n                                                    />\r\n                                                </IconButton>\r\n                                                <span className={classes.dot} style={{flexGrow:1}}/>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Grid item xs={4}>\r\n                                            <Input\r\n                                                value={this.state.SoilClassificationSystem}\r\n                                                onChange={(event, newValue) => this.setState({SoilClassificationSystem: newValue})}\r\n                                                id=\"SoilClassificationSystem\"\r\n                                                disabled\r\n                                            />\r\n                                        </Grid>\r\n                                        <Grid item xs={8} justify=\"flex-start\">\r\n                                            <Grid container xs={12} justify=\"flex-start\">\r\n                                                <span>Soil classification of subgrade</span>\r\n                                                <span className={classes.dot} style={{flexGrow: 1}}/>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Grid item xs={4}>\r\n                                            <Autocomplete\r\n                                                margin=\"dense\"\r\n                                                id=\"SoilSub\"\r\n                                                options={soilClassSub}\r\n                                                size=\"small\"\r\n                                                onChange={(event, value) => this.handleSoilSub(value)}\r\n                                                renderInput={(params) => <TextField dense {...params} label=\"\"/>}/>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Grid container item xs={12} spacing={1} alignItems=\"flex-end\" justify=\"center\">\r\n                                    <Grid item xs={12} justify=\"flex-start\">\r\n                                        <Typography variant={'h6'}>Base layer information</Typography>\r\n                                    </Grid>\r\n                                    <Grid container item xs={11} md={10} lg={8} spacing={1} justify=\"center\"\r\n                                          alignItems=\"flex-end\">\r\n\r\n                                        <Grid item xs={8} justify=\"flex-start\">\r\n                                            <Grid container xs={12} justify=\"flex-start\">\r\n                                                <span>Base layer thickness (cm)</span>\r\n                                                <IconButton aria-label=\"info\"\r\n                                                            className={classes.margin} size=\"small\">\r\n                                                    <InfoIcon fontSize=\"small\"\r\n                                                              onMouseEnter={this.handleOpenHelper({text: <><div>Minimum Cap.</div><div>CTB ≥ 6.0 in.</div><div>HMA ≥ 4.0 in</div></>})}\r\n                                                              onMouseLeave={this.handleCloseHelper}\r\n                                                    />\r\n                                                </IconButton>\r\n                                                <span className={classes.dot} style={{flexGrow: 1}}/>\r\n                                            </Grid>\r\n                                        </Grid>\r\n\r\n                                            <Grid item xs={4}>\r\n                                                <TextField\r\n                                                    error={this.errorFunc.Step3.BaseThickness()}\r\n                                                    helperText={this.errorFunc.Step3.BaseThickness()}\r\n                                                    value={this.state.BaseThickness}\r\n                                                    onChange={(event) => this.handleChange('BaseThickness',event.target.value)}\r\n                                                    id=\"BaseThickness\"\r\n                                                    InputLabelProps={{\r\n                                                        shrink: true,\r\n                                                    }}\r\n                                                    inputProps={{\r\n                                                        min: this.state.BaseThicknessMin,\r\n                                                        max: this.state.BaseThicknessMax,\r\n                                                        type: 'number',\r\n                                                    }}\r\n                                                />\r\n                                            </Grid>\r\n                                        <Grid item xs={8} justify=\"flex-start\">\r\n                                            <Grid container xs={12} justify=\"flex-start\">\r\n                                                <span>Modulus of base layer (MPa)</span>\r\n                                                <IconButton aria-label=\"info\"\r\n                                                            className={classes.margin} size=\"small\">\r\n                                                    <InfoIcon fontSize=\"small\"\r\n                                                              onMouseEnter={this.handleOpenHelper({text: <><div>CTB = 500 ksi</div><div>HMA base = 400 ksi</div></>})}\r\n                                                              onMouseLeave={this.handleCloseHelper}\r\n                                                    />\r\n                                                </IconButton>\r\n                                                <span className={classes.dot} style={{flexGrow: 1}}/>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Grid item xs={4}>\r\n                                            <TextField type=\"number\" id=\"ModulusBase \" value={this.state.ModulusBase }\r\n                                                       disabled\r\n                                                   onChange={(event) => this.setState({ModulusBase : event.target.value})}\r\n                                                       inputProps={{\r\n                                                           min: 350,\r\n                                                           max: 3500,\r\n                                                           type: 'number',\r\n                                                       }}/>\r\n                                        </Grid>\r\n                                        <Grid item xs={8} justify=\"flex-start\">\r\n                                            <Grid container xs={12} justify=\"flex-start\">\r\n                                                <span>Composite k-Value (MPa/m)</span>\r\n                                                <IconButton aria-label=\"info\"\r\n                                                            className={classes.margin} size=\"small\">\r\n                                                    <InfoIcon fontSize=\"small\"\r\n                                                              onMouseEnter={this.handleOpenHelper({text: 'Composite k table'})}\r\n                                                              onMouseLeave={this.handleCloseHelper}\r\n                                                    />\r\n                                                </IconButton>\r\n                                                <span className={classes.dot} style={{flexGrow: 1}}/>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                        <Grid item xs={4}>\r\n                                            <TextField type=\"number\" id=\"CompositeK \" value={this.state.CompositeK }\r\n                                                       disabled/>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </form>\r\n                        {getGroupControl()}\r\n                    </StepContent>\r\n                </Step>\r\n            </Stepper>\r\n            {this.state.activeStep === this.state.stepsLength && (\r\n                <>\r\n                    <Paper square elevation={0} className={classes.resetContainer}>\r\n                        <Button onClick={this.handleModify} className={classes.button}\r\n                                size=\"small\"\r\n                                startIcon={<EditIcon/>}\r\n                        >\r\n                            Modify\r\n                        </Button>\r\n                        <Button onClick={this.handleReset} className={classes.button}\r\n                                size=\"small\"\r\n                                startIcon={<RefreshIcon/>}\r\n                        >\r\n                            Reset\r\n                        </Button>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            size=\"small\"\r\n                            className={classes.button}\r\n                            startIcon={<PrintIcon/>}\r\n                            // onClick={()=>this.props.print(this.state)}\r\n                            onClick={()=>window.print()}\r\n                        >\r\n                            Print\r\n                        </Button>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            size=\"small\"\r\n                            className={classes.button}\r\n                            startIcon={<SaveIcon/>}\r\n                            // onClick={()=>this.props.print(this.state)}\r\n                            onClick={this.onSaveInput}\r\n                        >\r\n                            Save input\r\n                        </Button>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            size=\"small\"\r\n                            className={classes.button}\r\n                            // startIcon={<PrintIcon/>}\r\n                            // onClick={()=>this.props.print(this.state)}\r\n                            onClick={()=>this.setState({openAnalytics:true})}\r\n                        >\r\n                            ANALYSIS RESULT\r\n                        </Button>\r\n                        <Button\r\n                            size=\"small\"\r\n                            variant=\"contained\"\r\n                            onClick={this.props.toMenu}\r\n                            className={classes.button}\r\n                            startIcon={<HomeIcon/>}\r\n                        >\r\n                            To Main Menu\r\n                        </Button>\r\n                    </Paper>\r\n                </>\r\n            )}\r\n            </Grid>\r\n                {this.state.finished ?<Grid xs={10} item>\r\n                    <Report\r\n                        data={this.state}\r\n                        AnalysisPunchouts={this.props.AnalysisPunchouts()}\r\n                        AnalysisSlabThickness={this.props.AnalysisSlabThickness()}\r\n                    />\r\n                </Grid>:''}\r\n            </Grid>\r\n        </Paper>\r\n            {(this.state.helperEl&& this.state.helperEl.content && !this.state.helperEl.content.map) ?\r\n                <Popper\r\n                    placement=\"right\"\r\n                    disablePortal={false}\r\n                    open={true}\r\n                    anchorEl={this.state.helperEl.el}\r\n                    modifiers={{\r\n                        flip: {\r\n                            enabled: true,\r\n                        },\r\n                        preventOverflow: {\r\n                            enabled: true,\r\n                            boundariesElement: 'window',\r\n                        },\r\n                        arrow: {\r\n                            enabled: true,\r\n                        },\r\n                    }}\r\n                    style={{zIndex: 4}}\r\n                >\r\n                    <Card className={classes.helpHolder}>\r\n                        {this.state.helperEl.freeze?<IconButton aria-label=\"close\" className={classes.closeButton} onClick={this.handleCloseHelper}>\r\n                            <CloseIcon />\r\n                        </IconButton>:''}\r\n                        {this.state.helperEl.content.src ?\r\n                            <TransformWrapper\r\n                                defaultScale={1}\r\n                                defaultPositionX={1}\r\n                                defaultPositionY={1}\r\n                            >\r\n                                <TransformComponent>\r\n                            <img\r\n                                src={this.state.helperEl.content.src}\r\n                                style={{maxWidth: 600, height: 'auto'}}\r\n                            /></TransformComponent></TransformWrapper> :\r\n                            this.state.helperEl.content.text\r\n                        }\r\n                    </Card>\r\n                </Popper> : ''\r\n            }\r\n            <Dialog\r\n                fullWidth={true}\r\n                maxWidth={\"lg\"}\r\n                open={this.state.openAnalytics}\r\n                onClose={()=>this.setState({openAnalytics:false})}>\r\n                <DialogTitle id=\"responsive-dialog-title\" onClose={()=>this.setState({openAnalytics:false})}>Analysis</DialogTitle>\r\n                <DialogContent>\r\n                {this.state.finished ? <Graph\r\n                    rows={this.state.rows}\r\n                    AnalysisPunchouts={this.props.AnalysisPunchouts}\r\n                    init={this.state.activeStep === this.state.stepsLength}\r\n                    parameter={{...this.state}}/> : ''}\r\n                </DialogContent>\r\n            </Dialog>\r\n            <Popper\r\n                placement=\"right\"\r\n                disablePortal={false}\r\n                open={(this.state.helperEl&& this.state.helperEl.content&& this.state.helperEl.content.map)}\r\n                anchorEl={this.state.helperEl&&this.state.helperEl.el}\r\n                modifiers={{\r\n                    flip: {\r\n                        enabled: true,\r\n                    },\r\n                    preventOverflow: {\r\n                        enabled: true,\r\n                        boundariesElement: 'window',\r\n                    },\r\n                    arrow: {\r\n                        enabled: true,\r\n                    },\r\n                }}\r\n                style={{zIndex: 4}}\r\n            >\r\n                <Card style={{width:800}}>\r\n                    {this.state.helperEl&&this.state.helperEl.freeze?<IconButton aria-label=\"close\" className={classes.closeButton} onClick={this.handleCloseHelper}>\r\n                        <CloseIcon />\r\n                    </IconButton>:''}\r\n\r\n                {/*<Region highlight={this.state.currentRegions}*/}\r\n                {/*        target={this.state.Region}*/}\r\n                {/*        selected={(value)=>{*/}\r\n                {/*    if (value)*/}\r\n                {/*        this.setState({*/}\r\n                {/*            Region: value,*/}\r\n                {/*            Area: counties[value].length === 1 ? counties[value][0] : null*/}\r\n                {/*        });*/}\r\n                {/*    else*/}\r\n                {/*        this.setState({Region: value})*/}\r\n                {/*}}/>*/}\r\n                </Card>\r\n            </Popper>\r\n        </Container>);\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(CRCP);\r\n","export default __webpack_public_path__ + \"static/media/logo.61e6845e.png\";","import React from 'react';\nimport './App.css';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {AppBar,IconButton,Typography,Button,Toolbar,Grid,Slide} from '@material-ui/core';\nimport coverPic from './image/cover.jpg';\nimport CRCP from './component/CRCP'\nimport logo from './image/logo.png'\nimport Report from \"./component/report\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  titleNav: {\n    flexGrow: 1,\n  },\n  title: {\n    color: 'white'\n  },\n  cover: {\n    width:'100%',\n    position:'fixed',\n    background: `linear-gradient(0deg,rgba(0,0,0,0) 0,#000 100%), url(${coverPic}) no-repeat center center fixed`,\n    backgroundSize: 'cover',\n    height: '100vh',\n    overflow: 'hidden',\n    zIndex: -1\n  },\n  logo: {\n    height: '3rem'\n  }\n}));\n\nfunction App() {\n  const [page, setPage] = React.useState('home');\n  const [reportData, setReportData] = React.useState({});\n  const [AnalysisPunchouts, setAnalysisPunchouts] = React.useState(0);\n  const [AnalysisSlabThickness, setAnalysisSlabThickness] = React.useState(0);\n  const classes = useStyles();\n  const AnalysisPunchoutsFunc = (d)=>d===undefined?AnalysisPunchouts:setAnalysisPunchouts(d);\n  const AnalysisSlabThicknessFunc = (d)=>d===undefined?AnalysisSlabThickness:setAnalysisSlabThickness(d);\n  return (\n    <div >\n      <div className={classes.cover}></div>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\" className={classes.titleNav}>\n            Bonded CRCP\n          </Typography>\n          <div className={classes.grow}></div>\n          <a href={'https://www.kict.re.kr/eng/'}>\n          <img src={logo} className={classes.logo}/>\n          </a>\n        </Toolbar>\n      </AppBar>\n      <div className={classes.root}>\n        <Slide direction=\"up\" in={page==='home'} mountOnEnter unmountOnExit>\n          <Grid container spacing={5} alignItems=\"center\" justify=\"center\" direction={\"column\"} style={{height: 'calc(100vh - 64px)',width:'100%'}}>\n            <Grid item>\n              <Typography variant=\"h4\" className={classes.title}>\n                Bonded CRCP Overlay on Jointed Concrete Pavement Design System\n              </Typography>\n            </Grid>\n            <Grid container item alignItems=\"stretch\" justify=\"center\" direction={\"column\"} spacing={3} style={{width:'fit-content'}}>\n              <Grid item>\n                <Button variant=\"contained\" color=\"primary\" style={{width:'100%'}} size={\"large\"} onClick={()=>setPage('CRCP')}>Start</Button>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Slide>\n        <Slide direction=\"up\" in={page==='CRCP'} mountOnEnter unmountOnExit>\n          <CRCP\n              toMenu={()=>setPage('home')}\n              // print={(d)=>{setReportData(d);setPage('Print')}}\n              AnalysisPunchouts={AnalysisPunchoutsFunc}\n              AnalysisSlabThickness={AnalysisSlabThicknessFunc}\n          />\n        </Slide>\n        {/*<Slide direction=\"up\" in={page==='Print'} mountOnEnter unmountOnExit>*/}\n        {/*  <Report*/}\n        {/*      data={reportData}*/}\n        {/*      toMenu={()=>setPage('home')}*/}\n        {/*      toCRCP={()=>setPage('CRCP')}*/}\n        {/*      AnalysisPunchouts={AnalysisPunchoutsFunc()}*/}\n        {/*  />*/}\n        {/*</Slide>*/}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}